{"version":3,"sources":["components/Lists/Task/Task.module.css","components/TaskGenerator/TaskGenerator.module.css","components/UI/Card.module.css","components/UI/Modal.module.css","components/Lists/Lists.module.css","App.module.css","components/Layout/Header.module.css","components/Layout/Footer.module.css","components/UI/Input.module.css","components/Layout/PencilSVG.js","components/Layout/Header.js","components/Layout/Footer.js","components/UI/Input.js","components/TaskGenerator/OptionButton.js","components/TaskGenerator/FormButton.js","components/TaskGenerator/TaskForm.js","components/TaskGenerator/LabelForm.js","components/UI/ExpandIcon.js","components/UI/MinimizeIcon.js","components/UI/Card.js","store/tasks-context.js","store/tasks-helper.js","components/UI/Modal.js","components/TaskGenerator/TaskGenerator.js","components/Lists/Task/CheckIcon.js","components/Lists/Task/InfoIcon.js","components/Lists/Task/DeleteIcon.js","components/Lists/Task/Task.js","components/Lists/List.js","components/Lists/Lists.js","store/TasksProvider.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PencilIcon","props","xmlns","width","height","fill","className","viewBox","d","Header","classes","header","title","Footer","footer","Input","React","forwardRef","ref","TextField","defaultValue","type","input","id","label","variant","onChange","inputRef","multiline","rows","row","OptionButton","option","chosen","style","backgroundColor","color","onClick","FormButton","Button","formButton","text","TaskForm","useState","chosenLabel","setChosenLabel","nameInput","useRef","descriptionInput","chooseLabelHandler","labels","map","isChosen","name","bind","autoComplete","onSubmit","event","preventDefault","current","value","description","trim","length","onError","onAddNewTask","lastInputsData","toggleView","labelsList","labelColors","chosenColor","setChosenColor","labelNameInput","chooseColorHandler","colorOptions","replace","labelName","onAddNewLabel","ExpandIcon","fillRule","MinimizeIcon","Card","card","onExpand","expanded","icon","mainContent","children","TasksContext","createContext","tasks","add","move","remove","creationDate","today","Date","getDate","getMonth","getHours","getMinutes","dd","mm","hour","min","getFullYear","getDay","yyyy","randId","now","toString","Math","random","substr","Backdrop","backdrop","ModalOverlay","console","log","modal","content","buttonText","portalElement","document","getElementById","Modal","ReactDOM","createPortal","onClose","defaultGenState","mainFormView","currentInputsData","lastCreatedLabel","formError","genReducer","state","action","error","TaskGenerator","useReducer","genState","dispatchGenAction","tasksCtx","useContext","onErroHandler","gen","task","inputsData","LabelForm","newLabel","updatedNewLabel","addLabel","CheckIcon","infoIcon","DeleteIcon","Task","showDescription","setShowDescription","data","active","completed","background","topContainer","date","deleteButton","buttonsContainer","InfoIcon","List","tasksList","Lists","isActiveExpanded","isCompletedExpanded","listViewState","setListViewState","activeTasks","filter","completedTasks","expandHandler","savedTasks","localStorage","getItem","savedLabels","defaultTasksState","JSON","parse","tasksReducer","updatedTasks","movedTaskId","movedTaskIdx","findIndex","movedTask","updatedTask","deletedTaskId","TasksProvider","tasksState","dispatchTasksAction","useEffect","setItem","stringify","tasksContext","Provider","App","saveToLocalStorage","window","addEventListener","removeEventListener","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.05afe267.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1rJHX\",\"topContainer\":\"Task_topContainer__14lcd\",\"date\":\"Task_date__5DF-i\",\"title\":\"Task_title__1sxnH\",\"completed\":\"Task_completed__1KEmB\",\"label\":\"Task_label__D89nM\",\"buttonsContainer\":\"Task_buttonsContainer__2fy2f\",\"icon\":\"Task_icon__1PomF\",\"deleteButton\":\"Task_deleteButton__1xL8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"TaskGenerator_formButton__2rDnS\",\"gen\":\"TaskGenerator_gen__OH5Ca\",\"labelsList\":\"TaskGenerator_labelsList__1DknC\",\"option\":\"TaskGenerator_option__1FuX3\",\"chosen\":\"TaskGenerator_chosen__3Wy_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1NlOb\",\"header\":\"Card_header__1EsBM\",\"icon\":\"Card_icon__2NNQZ\",\"mainContent\":\"Card_mainContent__3ZezA\",\"expanded\":\"Card_expanded__242JD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2B7vN\",\"modal\":\"Modal_modal__35tKt\",\"slide-down\":\"Modal_slide-down__2hmTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksList\":\"Lists_tasksList__1K9Aj\",\"expanded\":\"Lists_expanded__3SJx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YFrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eXYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PgvOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__IG9Qu\"};","const PencilIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-check2-square\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M3 14.5A1.5 1.5 0 0 1 1.5 13V3A1.5 1.5 0 0 1 3 1.5h8a.5.5 0 0 1 0 1H3a.5.5 0 0 0-.5.5v10a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V8a.5.5 0 0 1 1 0v5a1.5 1.5 0 0 1-1.5 1.5H3z\" />\r\n      <path d=\"m8.354 10.354 7-7a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PencilIcon;\r\n","import PencilIcon from './PencilSVG';\r\nimport classes from '../Layout/Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <h1>{props.title}</h1>\r\n        <PencilIcon width={20} height={20} />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from '../Layout/Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className={classes.footer}>\r\n        <p> by Omer Zabtani</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classes from './Input.module.css';\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      defaultValue={props.defaultValue}\r\n      type=\"text\"\r\n      className={classes.input}\r\n      id={props.id}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n      onChange={props.onChange}\r\n      inputRef={ref}\r\n      multiline={props.multiline ? true : null}\r\n      rows={props.row ? props.row : null}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import classes from './TaskGenerator.module.css';\r\n\r\nconst OptionButton = (props) => {\r\n  return (\r\n    <li className={`${classes.option} ${props.chosen && classes.chosen}`}>\r\n      <button\r\n        type=\"button\"\r\n        style={{ backgroundColor: props.color }}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.title}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst FormButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={props.color}\r\n      type={props.type}\r\n      className={classes.formButton}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Input from '../UI/Input';\r\nimport { useRef, useState } from 'react';\r\nimport OptionButton from './OptionButton';\r\nimport FormButton from './FormButton';\r\n\r\nconst TaskForm = (props) => {\r\n  const [chosenLabel, setChosenLabel] = useState(props.chosenLabel);\r\n  const nameInput = useRef();\r\n  const descriptionInput = useRef();\r\n  const addNewTaskHandler = (event) => {\r\n    event.preventDefault();\r\n    const name = nameInput.current.value;\r\n    const description = descriptionInput.current.value;\r\n    if (name.trim('').length < 3) {\r\n      props.onError('note name is too short');\r\n      return;\r\n    }\r\n\r\n    props.onAddNewTask({\r\n      name: name,\r\n      description: description,\r\n      label: chosenLabel,\r\n    });\r\n    nameInput.current.value = '';\r\n    descriptionInput.current.value = '';\r\n  };\r\n  const chooseLabelHandler = (label) => {\r\n    setChosenLabel(label);\r\n  };\r\n  const toggleView = () => {\r\n    props.toggleView({\r\n      name: nameInput.current.value,\r\n      description: descriptionInput.current.value,\r\n    });\r\n  };\r\n  const labels = props.labels.map((label) => {\r\n    const isChosen = label.id === chosenLabel.id ? true : false;\r\n    return (\r\n      <OptionButton\r\n        chosen={isChosen}\r\n        key={label.id}\r\n        title={label.name}\r\n        color={label.color}\r\n        onClick={chooseLabelHandler.bind(null, label)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewTaskHandler}>\r\n        <Input\r\n          label=\"Note name\"\r\n          id=\"name\"\r\n          ref={nameInput}\r\n          defaultValue={props.lastInputsData.name}\r\n        />\r\n        <Input\r\n          defaultValue={props.lastInputsData.description}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          multiline={true}\r\n          row={4}\r\n          ref={descriptionInput}\r\n        />\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Note\" />\r\n        <FormButton type=\"button\" onClick={toggleView} text=\"Add new label\" />\r\n        <ul className={classes.labelsList}>{labels}</ul>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import Input from '../UI/Input';\r\nimport classes from './TaskGenerator.module.css';\r\nimport FormButton from './FormButton';\r\nimport { useRef, useState } from 'react';\r\nimport OptionButton from './OptionButton';\r\n\r\nconst TaskForm = (props) => {\r\n  const [chosenColor, setChosenColor] = useState(props.labelColors[0]);\r\n  const labelNameInput = useRef();\r\n  const addNewLabelHandler = (event) => {\r\n    event.preventDefault();\r\n    const labelName = labelNameInput.current.value;\r\n    if (labelName.length < 3) {\r\n      props.onError('label is too short!');\r\n      return;\r\n    }\r\n    props.onAddNewLabel({\r\n      name: labelName,\r\n      color: chosenColor,\r\n    });\r\n    props.toggleView();\r\n  };\r\n  const chooseColorHandler = (color) => {\r\n    setChosenColor(color);\r\n  };\r\n  const colorOptions = props.labelColors.map((color) => {\r\n    const isChosen = chosenColor === color;\r\n    return (\r\n      <OptionButton\r\n        chosen={isChosen}\r\n        key={color.replace('#', '')}\r\n        color={color}\r\n        title={color}\r\n        type=\"button\"\r\n        value={color}\r\n        label=\"Description\"\r\n        onClick={chooseColorHandler.bind(null, color)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewLabelHandler}>\r\n        <Input label=\"Label name\" ref={labelNameInput} />\r\n        <ul className={classes.labelsList}>{colorOptions}</ul>\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Label\" />\r\n        <FormButton type=\"button\" text=\"Go back\" onClick={props.toggleView} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","const ExpandIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className={`bi bi-arrows-angle-expand ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport default ExpandIcon;\r\n","const MinimizeIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className={`bi bi-dash-lg ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M0 8a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default MinimizeIcon;\r\n","import classes from './Card.module.css';\r\nimport ExpandIcon from './ExpandIcon';\r\nimport MinimizeIcon from './MinimizeIcon';\r\nconst Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className={`${classes.card} ${props.className}`}>\r\n        <div className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n          {props.onExpand && (\r\n            <button type=\"button\" onClick={props.onExpand}>\r\n              {props.expanded ? (\r\n                <MinimizeIcon className={classes.icon} width=\"25\" height=\"25\" />\r\n              ) : (\r\n                <ExpandIcon className={classes.icon} width=\"25\" height=\"25\" />\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.mainContent}>{props.children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nexport const TasksContext = React.createContext({\r\n  tasks: [],\r\n  add: () => {},\r\n  move: (id) => {},\r\n  remove: () => {},\r\n});\r\n\r\nexport default TasksContext;\r\n","export const creationDate = () => {\r\n  const today = new Date();\r\n  let [dd, mm, hour, min] = [\r\n    today.getDate(),\r\n    today.getMonth() + 1,\r\n    today.getHours(),\r\n    today.getMinutes(),\r\n  ];\r\n  const [yyyy, day, weekDays] = [\r\n    today.getFullYear(),\r\n    today.getDay(),\r\n    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  ];\r\n\r\n  if (dd < 10) dd = '0' + dd;\r\n  if (mm < 10) mm = '0' + mm;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n  const creationTime = ` ${weekDays[day]}, ${dd}/${mm}/${yyyy}, ${hour}:${min}`;\r\n  return creationTime;\r\n};\r\nexport const randId = () => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n","import classes from './Modal.module.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className={classes.modal}>\r\n      <p className={classes.content}>{props.children}</p>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        onClick={props.onClick}\r\n      >\r\n        {props.buttonText}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById('overlays');\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay buttonText={props.buttonText} onClick={props.onClose}>\r\n          {props.children}\r\n        </ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useContext, useReducer } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport LabelForm from './LabelForm';\r\nimport Card from '../UI/Card';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { randId } from '../../store/tasks-helper';\r\nimport classes from './TaskGenerator.module.css';\r\nimport Modal from '../UI/Modal';\r\n\r\nconst defaultGenState = {\r\n  mainFormView: true,\r\n  currentInputsData: { name: '', description: '' },\r\n  lastCreatedLabel: { id: 'def', name: 'General', color: '#0000003b' },\r\n  formError: false,\r\n};\r\nconst genReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SWITCH_TO_TASK_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: true,\r\n      };\r\n\r\n    case 'SWITCH_TO_LABEL_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: false,\r\n        currentInputsData: action.value,\r\n      };\r\n\r\n    case 'FORM_ERROR':\r\n      const error = action.value;\r\n      return {\r\n        ...state,\r\n        formError: error,\r\n      };\r\n\r\n    default:\r\n      return defaultGenState;\r\n  }\r\n};\r\nconst TaskGenerator = (props) => {\r\n  const [genState, dispatchGenAction] = useReducer(genReducer, defaultGenState);\r\n  const tasksCtx = useContext(TasksContext);\r\n  console.log(tasksCtx);\r\n  const onAddNewTaskHandler = (task) => {\r\n    tasksCtx.add({ ...task, id: randId() });\r\n  };\r\n  const onAddNewLabelHandler = (newLabel) => {\r\n    const updatedNewLabel = { ...newLabel, id: randId() };\r\n    tasksCtx.addLabel(updatedNewLabel);\r\n  };\r\n  const switchToTaskFormHandler = () => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_TASK_FORM' });\r\n  };\r\n  const switchToLabelFormHandler = (inputsData) => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_LABEL_FORM', value: inputsData });\r\n  };\r\n  const onErroHandler = (error) => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: error });\r\n  };\r\n  const closeErrorModalHandler = () => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: false });\r\n  };\r\n  return (\r\n    <Card className={classes.gen} title=\"New Note\">\r\n      {genState.formError && (\r\n        <Modal buttonText=\"Back To App\" onClose={closeErrorModalHandler}>\r\n          {genState.formError}\r\n        </Modal>\r\n      )}\r\n\r\n      {genState.mainFormView && (\r\n        <TaskForm\r\n          onError={onErroHandler}\r\n          lastInputsData={\r\n            genState.currentInputsData && genState.currentInputsData\r\n          }\r\n          chosenLabel={genState.lastCreatedLabel}\r\n          onAddNewTask={onAddNewTaskHandler}\r\n          toggleView={switchToLabelFormHandler}\r\n          labels={tasksCtx.labels}\r\n        />\r\n      )}\r\n      {!genState.mainFormView && (\r\n        <LabelForm\r\n          onError={onErroHandler}\r\n          labelColors={props.labelColors}\r\n          onAddNewLabel={onAddNewLabelHandler}\r\n          toggleView={switchToTaskFormHandler}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskGenerator;\r\n","const CheckIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-check-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CheckIcon;\r\n","const infoIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-info-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default infoIcon;\r\n","const DeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-x-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteIcon;\r\n","import classes from './Task.module.css';\r\nimport CheckIcon from './CheckIcon';\r\nimport InfoIcon from './InfoIcon';\r\nimport DeleteIcon from './DeleteIcon';\r\nimport { useContext, useState } from 'react';\r\nimport TasksContext from '../../../store/tasks-context';\r\nconst Task = (props) => {\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const tasksCtx = useContext(TasksContext);\r\n  const toggleDescriptionHandler = () => {\r\n    setShowDescription(!showDescription);\r\n  };\r\n  const removeHandler = (id) => {\r\n    tasksCtx.remove(id);\r\n  };\r\n  const moveHandler = (id) => {\r\n    tasksCtx.move(id);\r\n  };\r\n  console.log(props);\r\n  return (\r\n    <div\r\n      className={\r\n        props.data.active\r\n          ? classes.task\r\n          : `${classes.task} ${classes.completed}`\r\n      }\r\n      style={{\r\n        background: `linear-gradient(${props.data.label.color},rgb(253, 253, 253)`,\r\n      }}\r\n    >\r\n      <div className={classes.topContainer}>\r\n        <div className={classes.date}>{props.data.date}</div>\r\n        <button type=\"button\" onClick={removeHandler.bind(null, props.data.id)}>\r\n          <DeleteIcon className={classes.deleteButton} width={19} height={19} />\r\n        </button>\r\n      </div>\r\n      <h2 className={classes.title}>{props.data.name}</h2>\r\n      {props.data.description && showDescription && (\r\n        <p>{props.data.description}</p>\r\n      )}\r\n      <div\r\n        className={classes.label}\r\n        style={{ backgroundColor: props.data.label.color }}\r\n      >\r\n        #{props.data.label.name}\r\n      </div>\r\n      <div className={classes.buttonsContainer}>\r\n        <button type=\"button\" onClick={moveHandler.bind(null, props.data.id)}>\r\n          {props.data.active ? 'Complete' : 'Activate'}\r\n          <div className={classes.icon}>\r\n            <CheckIcon width={25} height={25} />\r\n          </div>\r\n        </button>\r\n        {props.data.description && (\r\n          <button type=\"button\" onClick={toggleDescriptionHandler}>\r\n            {showDescription ? 'Hide paragraph' : 'Info'}\r\n            <div className={classes.icon}>\r\n              <InfoIcon width={25} height={25} />\r\n            </div>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import Card from '../UI/Card';\r\nimport Task from './Task/Task';\r\nimport classes from './Lists.module.css';\r\nconst List = (props) => {\r\n  const tasks = props.tasks.map((task) => <Task key={task.id} data={task} />);\r\n  return (\r\n    <Card\r\n      onExpand={props.onExpand}\r\n      className={props.expanded && classes.expanded}\r\n      expanded={props.expanded}\r\n      title={props.title}\r\n    >\r\n      <div className={classes.tasksList}>\r\n        {tasks.length > 0 ? tasks : 'List is empty.'}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import List from './List';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useContext, useState } from 'react';\r\nconst Lists = () => {\r\n  const { tasks } = useContext(TasksContext);\r\n  const [listViewState, setListViewState] = useState({\r\n    isActiveExpanded: true,\r\n    isCompletedExpanded: false,\r\n  });\r\n  const activeTasks = tasks.filter((task) => task.active === true);\r\n  const completedTasks = tasks.filter((task) => task.active !== true);\r\n  const expandHandler = () => {\r\n    setListViewState((state) => {\r\n      return {\r\n        isActiveExpanded: !state.isActiveExpanded,\r\n        isCompletedExpanded: !state.isCompletedExpanded,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        onExpand={expandHandler}\r\n        expanded={listViewState.isActiveExpanded}\r\n        tasks={activeTasks}\r\n        title=\"Active\"\r\n      />\r\n      <List\r\n        onExpand={expandHandler}\r\n        expanded={listViewState.isCompletedExpanded}\r\n        tasks={completedTasks}\r\n        title=\"Completed\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport TasksContext from './tasks-context';\r\nimport { creationDate } from './tasks-helper';\r\nconst savedTasks = localStorage.getItem('tasks');\r\nconst savedLabels = localStorage.getItem('labels');\r\nconst defaultTasksState = {\r\n  tasks: savedTasks ? JSON.parse(savedTasks) : [],\r\n  labels: savedLabels\r\n    ? JSON.parse(savedLabels)\r\n    : [{ id: 'def', name: 'General', color: '#0000003b' }],\r\n};\r\nfunction tasksReducer(state, action) {\r\n  let updatedTasks = [...state.tasks];\r\n  switch (action.type) {\r\n    case 'ADDLABEL':\r\n      const label = action.value;\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, label],\r\n      };\r\n    case 'ADD':\r\n      const task = action.value;\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          ...updatedTasks,\r\n          { ...task, active: true, date: creationDate() },\r\n        ],\r\n      };\r\n    case 'MOVE':\r\n      const movedTaskId = action.value;\r\n      const movedTaskIdx = state.tasks.findIndex(\r\n        (task) => task.id === movedTaskId\r\n      );\r\n      const movedTask = updatedTasks[movedTaskIdx];\r\n      const updatedTask = { ...movedTask, active: !movedTask.active };\r\n      updatedTasks[movedTaskIdx] = updatedTask;\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n\r\n    case 'REMOVE':\r\n      const deletedTaskId = action.value;\r\n      updatedTasks = updatedTasks.filter((task) => task.id !== deletedTaskId);\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n    default:\r\n      return defaultTasksState;\r\n  }\r\n}\r\nexport const TasksProvider = (props) => {\r\n  const [tasksState, dispatchTasksAction] = useReducer(\r\n    tasksReducer,\r\n    defaultTasksState\r\n  );\r\n  const { tasks } = tasksState;\r\n  const { labels } = tasksState;\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    localStorage.setItem('labels', JSON.stringify(labels));\r\n  }, [tasks, labels]);\r\n  const addLabelHandler = (label) => {\r\n    dispatchTasksAction({ type: 'ADDLABEL', value: label });\r\n  };\r\n  const addHandler = (task) => {\r\n    dispatchTasksAction({ type: 'ADD', value: task });\r\n  };\r\n  const moveHandler = (id) => {\r\n    dispatchTasksAction({ type: 'MOVE', value: id });\r\n  };\r\n  const removeHandler = (id) => {\r\n    dispatchTasksAction({ type: 'REMOVE', value: id });\r\n  };\r\n\r\n  const tasksContext = {\r\n    labels: labels,\r\n    tasks: tasks,\r\n    addLabel: addLabelHandler,\r\n    add: addHandler,\r\n    move: moveHandler,\r\n    remove: removeHandler,\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider value={tasksContext}>\r\n      {props.children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TasksProvider;\r\n","import { useEffect } from 'react';\nimport classes from './App.module.css';\nimport Header from './components/Layout/Header';\nimport Footer from './components/Layout/Footer';\nimport TaskGenerator from './components/TaskGenerator/TaskGenerator';\nimport Lists from './components/Lists/Lists';\nimport { TasksProvider } from './store/TasksProvider';\nconst App = () => {\n  useEffect(() => {\n    const saveToLocalStorage = () => {\n      localStorage.setItem('dodo', 'drerei');\n    };\n    window.addEventListener('beforeunload', saveToLocalStorage);\n    return () => {\n      window.removeEventListener('beforeunload', saveToLocalStorage);\n    };\n  }, []);\n  const labelColors = [\n    '#0000003b',\n    '#04f43f3b',\n    '#f4041e3b',\n    '#e804f43b',\n    '#ffeb003b',\n    '#042df43b',\n  ];\n  return (\n    <div className={classes.app}>\n      <Header title=\"Noter\" />\n      <TasksProvider>\n        <main>\n          <TaskGenerator labelColors={labelColors} />\n          <Lists />\n        </main>\n      </TasksProvider>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}