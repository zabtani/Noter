{"version":3,"sources":["components/Lists/Task/Task.module.css","components/TaskGenerator/TaskGenerator.module.css","components/Lists/Lists.module.css","components/UI/Card.module.css","components/UI/Modal.module.css","App.module.css","components/Layout/Header.module.css","components/Layout/Footer.module.css","components/UI/Input.module.css","components/UI/Button.module.css","components/UI/Icons/PencilSVG.js","components/Layout/Header.js","store/tasks-context.js","components/Layout/Footer.js","components/UI/Input.js","components/UI/Icons/LabelDeleteIcon.js","components/TaskGenerator/OptionButton.js","components/TaskGenerator/FormButton.js","components/TaskGenerator/TaskForm.js","components/TaskGenerator/LabelForm.js","components/UI/MainOnIcon.js","components/UI/MainOffIcon.js","components/UI/Card.js","store/tasks-helper.js","components/UI/Modal.js","components/TaskGenerator/TaskGenerator.js","components/UI/Button.js","components/Lists/Filter.js","components/UI/Icons/CheckIcon.js","components/UI/Icons/InfoIcon.js","components/UI/Icons/DeleteIcon.js","components/UI/Icons/EditIcon.js","components/Lists/Task/TaskEditor.js","components/Lists/Task/Task.js","components/Lists/ListTasks.js","components/Lists/List.js","store/TasksProvider.js","components/IntroModal/IntroModal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PencilIcon","props","xmlns","width","height","fill","className","viewBox","d","Header","classes","header","title","TasksContext","React","createContext","tasks","add","move","id","remove","Footer","allTasks","useContext","footer","length","Input","forwardRef","ref","TextField","defaultValue","type","input","label","variant","onChange","inputRef","multiline","rows","row","LabelDeleteIcon","fillColor","OptionButton","option","chosen","deleteOption","onClick","delButton","icon","color","labelButton","style","backgroundColor","FormButton","formButton","text","TaskForm","nameInput","useRef","descriptionInput","tasksCtx","chooseLabelHandler","chooseLabel","deleteLabelHandler","labelId","deleteLabel","chooseDefaultLabel","labels","map","isChosen","chosenLabel","bind","name","autoComplete","onSubmit","event","preventDefault","current","value","description","trim","onError","onAddNewTask","lastInputsData","toggleView","labelsList","LabelForm","useState","labelColors","hex","chosenColor","setChosenColor","labelNameInput","chooseColorHandler","colorOptions","colorName","replace","labelName","onAddNewLabel","MainOnIcon","MainOffIcon","Card","card","onSwitch","switchText","toggleIconOn","mainContent","children","creationDate","today","Date","getDate","getMonth","getHours","getMinutes","dd","mm","hour","min","getFullYear","getDay","yyyy","randId","now","toString","Math","random","substr","Backdrop","backdrop","ModalOverlay","modal","content","buttonsContainer","onClose","buttonText","onAction","portalElement","document","getElementById","Modal","ReactDOM","createPortal","defaultLabel","defaultGenState","mainFormView","currentInputsData","formError","genReducer","state","action","error","TaskGenerator","useReducer","genState","dispatchGenAction","onErroHandler","gen","task","inputsData","newLabel","updatedNewLabel","addLabel","Button","Filter","optionFilterHandler","optionId","onFilter","sortButtons","actionButton","onToggleMenu","menuIsOpen","isOn","onCancel","options","filterOptionsList","filterOption","backgroundImage","CheckIcon","infoIcon","DeleteIcon","EditIcon","TaskEditor","data","changesState","setChangesState","titleOnEdit","setTitleOnEdit","descriptionOnEdit","setDescriptionOnEdit","inputChangeHandler","e","prop","prevState","target","active","completed","background","onBlur","autoFocus","idx","indexOf","Task","showDescription","setShowDescription","showRemoveModal","setShowRemoveModal","showTaskEditor","setShowTaskEditor","toggleEditHandler","topConIconsProps","modalTaskName","editedTask","update","topContainer","date","iconsCon","editButton","InfoIcon","ListTasks","v","tasksList","initialFilterState","filterMenuIsOpen","filterIsOn","List","chosenList","switchList","currentTasks","setCurrentTasks","filterState","setFilterState","listsRef","isActive","listTitle","toUpperCase","slice","listLabels","filter","i","a","findIndex","t","filterControlsShown","useEffect","scrollIntoView","changeFilterStatus","status","toggleFilterMenuHandler","listCard","filteredTasks","savedTasks","localStorage","getItem","savedLabels","defaultTasksState","JSON","parse","tasksReducer","updatedTasks","deletedLabelId","updatedLabels","editedTaskId","movedTaskId","movedTask","updatedTask","deletedTaskId","TasksProvider","tasksState","dispatchTasksAction","listTasks","setItem","stringify","switchListHandler","tasksContext","Provider","shoppingLabel","sportsLabel","codingLabel","IntroModal","showIntroModal","setShowIntroModal","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.95285a06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1rJHX\",\"topContainer\":\"Task_topContainer__14lcd\",\"iconsCon\":\"Task_iconsCon__3cBtO\",\"date\":\"Task_date__5DF-i\",\"title\":\"Task_title__1sxnH\",\"completed\":\"Task_completed__1KEmB\",\"label\":\"Task_label__D89nM\",\"buttonsContainer\":\"Task_buttonsContainer__2fy2f\",\"description\":\"Task_description__1qwfz\",\"modalTaskName\":\"Task_modalTaskName__d3qlZ\",\"icon\":\"Task_icon__1PomF\",\"delButton\":\"Task_delButton__1Uczn\",\"editButton\":\"Task_editButton__3U1Tf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"TaskGenerator_formButton__2rDnS\",\"gen\":\"TaskGenerator_gen__OH5Ca\",\"labelsList\":\"TaskGenerator_labelsList__1DknC\",\"option\":\"TaskGenerator_option__1FuX3\",\"labelButton\":\"TaskGenerator_labelButton__1_irb\",\"delButton\":\"TaskGenerator_delButton__HHdN5\",\"chosen\":\"TaskGenerator_chosen__3Wy_g\",\"icon\":\"TaskGenerator_icon__3nCQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksList\":\"Lists_tasksList__1K9Aj\",\"listCard\":\"Lists_listCard__39v9n\",\"filterOptionsList\":\"Lists_filterOptionsList__SVDia\",\"filterOption\":\"Lists_filterOption__2M_0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1NlOb\",\"header\":\"Card_header__1EsBM\",\"icon\":\"Card_icon__2NNQZ\",\"expanded\":\"Card_expanded__242JD\",\"mainContent\":\"Card_mainContent__3ZezA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2B7vN\",\"modal\":\"Modal_modal__35tKt\",\"slide-down\":\"Modal_slide-down__2hmTo\",\"buttonsContainer\":\"Modal_buttonsContainer__1Jb2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YFrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eXYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PgvOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__IG9Qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"Button_formButton__4rPxE\"};","const PencilIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-check2-square\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M3 14.5A1.5 1.5 0 0 1 1.5 13V3A1.5 1.5 0 0 1 3 1.5h8a.5.5 0 0 1 0 1H3a.5.5 0 0 0-.5.5v10a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V8a.5.5 0 0 1 1 0v5a1.5 1.5 0 0 1-1.5 1.5H3z\" />\r\n      <path d=\"m8.354 10.354 7-7a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PencilIcon;\r\n","import PencilIcon from '../UI/Icons/PencilSVG';\r\nimport classes from '../Layout/Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <h1>{props.title}</h1>\r\n        <PencilIcon width={20} height={20} />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const TasksContext = React.createContext({\r\n  tasks: [],\r\n  add: () => {},\r\n  move: (id) => {},\r\n  remove: () => {},\r\n});\r\n\r\nexport default TasksContext;\r\n","import classes from '../Layout/Footer.module.css';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useContext } from 'react';\r\nconst Footer = () => {\r\n  const { allTasks } = useContext(TasksContext);\r\n\r\n  return (\r\n    <>\r\n      <footer className={classes.footer}>\r\n        <p>{`${allTasks.length} NOTES TOTAL`}</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classes from './Input.module.css';\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      defaultValue={props.defaultValue}\r\n      type=\"text\"\r\n      className={classes.input}\r\n      id={props.id}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n      onChange={props.onChange}\r\n      inputRef={ref}\r\n      multiline={props.multiline ? true : null}\r\n      rows={props.row ? props.row : null}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","const LabelDeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill={props.fillColor}\r\n      className={`bi bi-backspace-reverse-fill ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M0 3a2 2 0 0 1 2-2h7.08a2 2 0 0 1 1.519.698l4.843 5.651a1 1 0 0 1 0 1.302L10.6 14.3a2 2 0 0 1-1.52.7H2a2 2 0 0 1-2-2V3zm9.854 2.854a.5.5 0 0 0-.708-.708L7 7.293 4.854 5.146a.5.5 0 1 0-.708.708L6.293 8l-2.147 2.146a.5.5 0 0 0 .708.708L7 8.707l2.146 2.147a.5.5 0 0 0 .708-.708L7.707 8l2.147-2.146z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LabelDeleteIcon;\r\n","import classes from './TaskGenerator.module.css';\r\nimport LabelDeleteIcon from '../UI/Icons/LabelDeleteIcon';\r\nconst OptionButton = (props) => {\r\n  return (\r\n    <li\r\n      className={`${classes.option} ${props.chosen && classes.chosen} ${\r\n        classes.className\r\n      } `}\r\n    >\r\n      {props.deleteOption && props.chosen && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.deleteOption}\r\n          className={classes.delButton}\r\n        >\r\n          <LabelDeleteIcon\r\n            className={classes.icon}\r\n            fillColor={props.color}\r\n            width={24}\r\n            height={24}\r\n          />\r\n        </button>\r\n      )}\r\n      <button\r\n        className={classes.labelButton}\r\n        type=\"button\"\r\n        style={{ backgroundColor: props.color }}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.title}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst FormButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={props.color}\r\n      type={props.type}\r\n      className={classes.formButton}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Input from '../UI/Input';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useRef, useContext } from 'react';\r\nimport OptionButton from './OptionButton';\r\nimport FormButton from './FormButton';\r\n\r\nconst TaskForm = (props) => {\r\n  const nameInput = useRef();\r\n  const descriptionInput = useRef();\r\n  const tasksCtx = useContext(TasksContext);\r\n\r\n  const addNewTaskHandler = (event) => {\r\n    event.preventDefault();\r\n    const name = nameInput.current.value;\r\n    const description = descriptionInput.current.value;\r\n    if (name.trim('').length < 3) {\r\n      props.onError('note name is too short');\r\n      return;\r\n    }\r\n    props.onAddNewTask({\r\n      name: name,\r\n      description: description,\r\n      label: props.chosenLabel,\r\n    });\r\n    nameInput.current.value = '';\r\n    descriptionInput.current.value = '';\r\n  };\r\n  const chooseLabelHandler = (label) => {\r\n    props.chooseLabel(label);\r\n  };\r\n  const toggleView = () => {\r\n    props.toggleView({\r\n      name: nameInput.current.value,\r\n      description: descriptionInput.current.value,\r\n    });\r\n  };\r\n\r\n  const deleteLabelHandler = (labelId) => {\r\n    tasksCtx.deleteLabel(labelId);\r\n    props.chooseDefaultLabel();\r\n  };\r\n\r\n  const labels = props.labels.map((label) => {\r\n    const isChosen = label.id === props.chosenLabel.id ? true : false;\r\n    return (\r\n      <OptionButton\r\n        deleteOption={\r\n          label.id === 'def' ? false : deleteLabelHandler.bind(null, label.id)\r\n        }\r\n        chosen={isChosen}\r\n        key={label.id}\r\n        title={label.name}\r\n        color={label.color}\r\n        onClick={chooseLabelHandler.bind(null, label)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewTaskHandler}>\r\n        <p>\r\n          Add name and description to the note,\r\n          <br />\r\n          then choose a label or create one.\r\n        </p>\r\n\r\n        <Input\r\n          label=\"Note name\"\r\n          id=\"name\"\r\n          ref={nameInput}\r\n          defaultValue={props.lastInputsData.name}\r\n        />\r\n        <Input\r\n          defaultValue={props.lastInputsData.description}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          multiline={true}\r\n          row={4}\r\n          ref={descriptionInput}\r\n        />\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Note\" />\r\n        <FormButton type=\"button\" onClick={toggleView} text=\"Add new label\" />\r\n        <ul className={classes.labelsList}>{labels}</ul>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import Input from '../UI/Input';\r\nimport classes from './TaskGenerator.module.css';\r\nimport FormButton from './FormButton';\r\nimport { useRef, useState } from 'react';\r\nimport OptionButton from './OptionButton';\r\n\r\nconst LabelForm = (props) => {\r\n  const [chosenColor, setChosenColor] = useState(props.labelColors[0].hex);\r\n  const labelNameInput = useRef();\r\n  const addNewLabelHandler = (event) => {\r\n    event.preventDefault();\r\n    const labelName = labelNameInput.current.value;\r\n    if (labelName.length < 3) {\r\n      props.onError('label is too short!');\r\n      return;\r\n    }\r\n    props.onAddNewLabel({\r\n      name: labelName,\r\n      color: chosenColor,\r\n    });\r\n    props.toggleView();\r\n  };\r\n  const chooseColorHandler = (color) => {\r\n    setChosenColor(color);\r\n  };\r\n  const colorOptions = props.labelColors.map((color) => {\r\n    const isChosen = chosenColor === color.hex;\r\n    return (\r\n      <OptionButton\r\n        deleteOption={false}\r\n        chosen={isChosen}\r\n        key={color.hex.replace('#', '')}\r\n        color={color.hex}\r\n        title={color.colorName}\r\n        type=\"button\"\r\n        value={color.hex}\r\n        label=\"Description\"\r\n        onClick={chooseColorHandler.bind(null, color.hex)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewLabelHandler}>\r\n        <p>Choose a name then a color for this new label!</p>\r\n        <Input label=\"Label name\" ref={labelNameInput} />\r\n        <ul className={classes.labelsList}>{colorOptions}</ul>\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Label\" />\r\n        <FormButton type=\"button\" text=\"Go back\" onClick={props.toggleView} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelForm;\r\n","const MainOnIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"whitesmoke\"\r\n      className={`bi bi-toggle-on ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M5 3a5 5 0 0 0 0 10h6a5 5 0 0 0 0-10H5zm6 9a4 4 0 1 1 0-8 4 4 0 0 1 0 8z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default MainOnIcon;\r\n","const MainOffIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className={`bi bi-toggle-off ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M11 4a4 4 0 0 1 0 8H8a4.992 4.992 0 0 0 2-4 4.992 4.992 0 0 0-2-4h3zm-6 8a4 4 0 1 1 0-8 4 4 0 0 1 0 8zM0 8a5 5 0 0 0 5 5h6a5 5 0 0 0 0-10H5a5 5 0 0 0-5 5z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default MainOffIcon;\r\n","import classes from './Card.module.css';\r\nimport MainOnIcon from './MainOnIcon';\r\nimport MainOffIcon from './MainOffIcon';\r\nconst Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className={`${classes.card} ${props.className}`}>\r\n        <div className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n          {props.onSwitch && (\r\n            <button type=\"button\" onClick={props.onSwitch}>\r\n              {props.switchText}\r\n              {props.toggleIconOn ? (\r\n                <MainOnIcon className={classes.icon} width=\"35\" height=\"35\" />\r\n              ) : (\r\n                <MainOffIcon className={classes.icon} width=\"35\" height=\"35\" />\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.mainContent}>{props.children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export const creationDate = () => {\r\n  const today = new Date();\r\n  let [dd, mm, hour, min] = [\r\n    today.getDate(),\r\n    today.getMonth() + 1,\r\n    today.getHours(),\r\n    today.getMinutes(),\r\n  ];\r\n  const [yyyy, day, weekDays] = [\r\n    today.getFullYear(),\r\n    today.getDay(),\r\n    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  ];\r\n\r\n  if (dd < 10) dd = '0' + dd;\r\n  if (mm < 10) mm = '0' + mm;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n  const creationTime = ` ${weekDays[day]}, ${dd}/${mm}/${yyyy}, ${hour}:${min}`;\r\n  return creationTime;\r\n};\r\nexport const randId = () => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n","import classes from './Modal.module.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n      <div className={classes.buttonsContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        >\r\n          {props.buttonText}\r\n        </Button>\r\n\r\n        {props.onAction && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color={props.color}\r\n            type=\"button\"\r\n            onClick={props.onAction}\r\n          >\r\n            approve\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById('overlays');\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          color={props.color ? props.color : 'secondary'}\r\n          buttonText={props.buttonText}\r\n          onClose={props.onClose}\r\n          onAction={props.onAction}\r\n        >\r\n          {props.children}\r\n        </ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useContext, useReducer } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport LabelForm from './LabelForm';\r\nimport Card from '../UI/Card';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { randId } from '../../store/tasks-helper';\r\nimport classes from './TaskGenerator.module.css';\r\nimport Modal from '../UI/Modal';\r\nconst defaultLabel = { id: 'def', name: 'General', color: '#0000003b' };\r\nconst defaultGenState = {\r\n  mainFormView: true,\r\n  currentInputsData: { name: '', description: '' },\r\n  chosenLabel: defaultLabel,\r\n  formError: false,\r\n};\r\nconst genReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHOOSE_LABEL':\r\n      const chosenLabel = action.value;\r\n      return {\r\n        ...state,\r\n        chosenLabel: chosenLabel,\r\n      };\r\n\r\n    case 'SWITCH_TO_TASK_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: true,\r\n      };\r\n\r\n    case 'SWITCH_TO_LABEL_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: false,\r\n        currentInputsData: action.value,\r\n      };\r\n\r\n    case 'FORM_ERROR':\r\n      const error = action.value;\r\n      return {\r\n        ...state,\r\n        formError: error,\r\n      };\r\n\r\n    default:\r\n      return defaultGenState;\r\n  }\r\n};\r\nconst TaskGenerator = (props) => {\r\n  const [genState, dispatchGenAction] = useReducer(genReducer, defaultGenState);\r\n  const tasksCtx = useContext(TasksContext);\r\n  const onAddNewTaskHandler = (task) => {\r\n    tasksCtx.add({ ...task, id: randId() });\r\n  };\r\n  const onAddNewLabelHandler = (newLabel) => {\r\n    const updatedNewLabel = { ...newLabel, id: randId() };\r\n    dispatchGenAction({ type: 'CHOOSE_LABEL', value: updatedNewLabel });\r\n    tasksCtx.addLabel(updatedNewLabel);\r\n  };\r\n  const chooseLabelHandler = (label) => {\r\n    dispatchGenAction({ type: 'CHOOSE_LABEL', value: label });\r\n  };\r\n  const chooseDefaultLabelHandler = () => {\r\n    dispatchGenAction({ type: 'CHOOSE_LABEL', value: defaultLabel });\r\n  };\r\n  const switchToTaskFormHandler = () => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_TASK_FORM' });\r\n  };\r\n  const switchToLabelFormHandler = (inputsData) => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_LABEL_FORM', value: inputsData });\r\n  };\r\n  const onErroHandler = (error) => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: error });\r\n  };\r\n  const closeErrorModalHandler = () => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: false });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.gen} title=\"New Note\">\r\n      {genState.formError && (\r\n        <Modal buttonText=\"Back To App\" onClose={closeErrorModalHandler}>\r\n          {genState.formError}\r\n        </Modal>\r\n      )}\r\n      {genState.mainFormView && (\r\n        <TaskForm\r\n          onError={onErroHandler}\r\n          lastInputsData={\r\n            genState.currentInputsData && genState.currentInputsData\r\n          }\r\n          onAddNewTask={onAddNewTaskHandler}\r\n          chosenLabel={genState.chosenLabel}\r\n          chooseDefaultLabel={chooseDefaultLabelHandler}\r\n          chooseLabel={chooseLabelHandler}\r\n          toggleView={switchToLabelFormHandler}\r\n          labels={tasksCtx.labels}\r\n        />\r\n      )}\r\n      {!genState.mainFormView && (\r\n        <LabelForm\r\n          onError={onErroHandler}\r\n          labelColors={props.labelColors}\r\n          onAddNewLabel={onAddNewLabelHandler}\r\n          toggleView={switchToTaskFormHandler}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskGenerator;\r\n","import classes from './Button.module.css';\r\nimport MaterialButton from '@material-ui/core/Button';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <MaterialButton\r\n      variant=\"contained\"\r\n      color={props.color}\r\n      type={props.type ? props.type : 'button'}\r\n      className={`${classes.formButton} ${props.className}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </MaterialButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import classes from './Lists.module.css';\r\nimport Button from '../UI/Button';\r\n\r\nconst Filter = (props) => {\r\n  const optionFilterHandler = (optionId) => {\r\n    props.onFilter(optionId);\r\n  };\r\n  const sortButtons = (\r\n    <>\r\n      <Button\r\n        className={classes.actionButton}\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          props.onToggleMenu();\r\n        }}\r\n        text={\r\n          props.menuIsOpen\r\n            ? 'Go back'\r\n            : props.isOn\r\n            ? 'Change Filter'\r\n            : 'Filter Options'\r\n        }\r\n      />\r\n      {props.isOn && !props.menuIsOpen && (\r\n        <Button\r\n          className={classes.actionButton}\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            props.onCancel();\r\n          }}\r\n          text=\"Cancel Filter\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n  const options = (\r\n    <ul className={classes.filterOptionsList}>\r\n      <p>Please choose filter... </p>\r\n      {props.options.map((option) => (\r\n        <button\r\n          type=\"button\"\r\n          title={option.name}\r\n          className={classes.filterOption}\r\n          color={option.color}\r\n          key={option.id}\r\n          style={{\r\n            backgroundImage: `linear-gradient(180deg, ${option.color} , transparent)`,\r\n          }}\r\n          onClick={optionFilterHandler.bind(null, option.id)}\r\n        >\r\n          {option.name}\r\n        </button>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {sortButtons}\r\n      {props.menuIsOpen && options}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const CheckIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-check-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CheckIcon;\r\n","const infoIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-info-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default infoIcon;\r\n","const DeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-x-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteIcon;\r\n","const EditIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 32 32\"\r\n      width={props.width}\r\n      height={props.height}\r\n    >\r\n      <path d=\"M 23.90625 3.96875 C 22.859375 3.96875 21.8125 4.375 21 5.1875 L 5.1875 21 L 5.125 21.3125 L 4.03125 26.8125 L 3.71875 28.28125 L 5.1875 27.96875 L 10.6875 26.875 L 11 26.8125 L 26.8125 11 C 28.4375 9.375 28.4375 6.8125 26.8125 5.1875 C 26 4.375 24.953125 3.96875 23.90625 3.96875 Z M 23.90625 5.875 C 24.410156 5.875 24.917969 6.105469 25.40625 6.59375 C 26.378906 7.566406 26.378906 8.621094 25.40625 9.59375 L 24.6875 10.28125 L 21.71875 7.3125 L 22.40625 6.59375 C 22.894531 6.105469 23.402344 5.875 23.90625 5.875 Z M 20.3125 8.71875 L 23.28125 11.6875 L 11.1875 23.78125 C 10.53125 22.5 9.5 21.46875 8.21875 20.8125 Z M 6.9375 22.4375 C 8.136719 22.921875 9.078125 23.863281 9.5625 25.0625 L 6.28125 25.71875 Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default EditIcon;\r\n","import { useContext, useState } from 'react';\r\nimport Modal from '../../UI/Modal';\r\nimport classes from './Task.module.css';\r\nimport TasksContext from '../../../store/tasks-context';\r\n\r\nconst TaskEditor = (props) => {\r\n  const [changesState, setChangesState] = useState({ ...props.data });\r\n  const [titleOnEdit, setTitleOnEdit] = useState(false);\r\n  const [descriptionOnEdit, setDescriptionOnEdit] = useState(false);\r\n  const { labels } = useContext(TasksContext);\r\n  const inputChangeHandler = (e, prop) => {\r\n    setChangesState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [prop]:\r\n          e.target.value.trim() === '' && e.type === 'blur'\r\n            ? props.data[prop]\r\n            : e.target.value,\r\n      };\r\n    });\r\n  };\r\n  const labelChangeHandler = () => {\r\n    let chosen;\r\n    const idx = labels.indexOf(changesState.label) + 1;\r\n    if (idx === labels.length) {\r\n      chosen = labels[0];\r\n    } else {\r\n      chosen = labels[idx];\r\n    }\r\n    setChangesState((prevState) => {\r\n      return { ...prevState, label: chosen };\r\n    });\r\n  };\r\n  const changeTitleHandler = () => {\r\n    setTitleOnEdit(true);\r\n  };\r\n  const changeDescriptionHandler = () => {\r\n    setDescriptionOnEdit(true);\r\n  };\r\n  return (\r\n    <Modal\r\n      color=\"default\"\r\n      buttonText=\"Dont save\"\r\n      onClose={() => {\r\n        props.onClose();\r\n      }}\r\n      onAction={() => {\r\n        props.onAction(changesState);\r\n        props.onClose();\r\n      }}\r\n    >\r\n      <b>Click on anything to edit... </b>\r\n      <ul>\r\n        <li\r\n          className={\r\n            props.data.active\r\n              ? classes.task\r\n              : `${classes.task} ${classes.completed}`\r\n          }\r\n          style={{\r\n            background: `linear-gradient(${changesState.label.color},rgb(253, 253, 253)`,\r\n          }}\r\n        >\r\n          {titleOnEdit ? (\r\n            <input\r\n              onChange={(e) => {\r\n                inputChangeHandler(e, 'name');\r\n              }}\r\n              onBlur={(e) => {\r\n                inputChangeHandler(e, 'name');\r\n              }}\r\n              value={changesState.name}\r\n              autoFocus\r\n              type=\"text\"\r\n              className={classes.title}\r\n            />\r\n          ) : (\r\n            <h2 onClick={changeTitleHandler} className={classes.title}>\r\n              {props.data.name}\r\n            </h2>\r\n          )}\r\n          {props.data.description && descriptionOnEdit ? (\r\n            <input\r\n              onChange={(e) => {\r\n                inputChangeHandler(e, 'description');\r\n              }}\r\n              onBlur={(e) => {\r\n                inputChangeHandler(e, 'description');\r\n              }}\r\n              value={changesState.description}\r\n              autoFocus\r\n              type=\"text\"\r\n              className={classes.description}\r\n            />\r\n          ) : (\r\n            <p onClick={changeDescriptionHandler}>{props.data.description}</p>\r\n          )}\r\n          <div\r\n            onClick={labelChangeHandler}\r\n            className={classes.label}\r\n            style={{ backgroundColor: changesState.label.color }}\r\n          >\r\n            #{changesState.label.name}\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TaskEditor;\r\n","import classes from './Task.module.css';\r\nimport CheckIcon from '../../UI/Icons/CheckIcon';\r\nimport InfoIcon from '../../UI/Icons/InfoIcon';\r\nimport DeleteIcon from '../../UI/Icons/DeleteIcon';\r\nimport EditIcon from '../../UI/Icons/EditIcon';\r\nimport { useContext, useState } from 'react';\r\nimport TasksContext from '../../../store/tasks-context';\r\nimport Modal from '../../UI/Modal';\r\nimport TaskEditor from './TaskEditor';\r\nconst Task = (props) => {\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n  const [showTaskEditor, setShowTaskEditor] = useState(false);\r\n  const tasksCtx = useContext(TasksContext);\r\n  const toggleDescriptionHandler = () => {\r\n    setShowDescription(!showDescription);\r\n  };\r\n  const showRemoveHandler = (id) => {\r\n    setShowRemoveModal(true);\r\n  };\r\n  const toggleEditHandler = () => {\r\n    setShowTaskEditor((prevState) => !prevState);\r\n  };\r\n  const removeHandler = (id) => {\r\n    tasksCtx.remove(id);\r\n  };\r\n  const moveHandler = (id) => {\r\n    tasksCtx.move(id);\r\n  };\r\n  const closeRemoveModalHandler = () => {\r\n    setShowRemoveModal(false);\r\n  };\r\n  const onEditActionHandler = (editedTask) => {\r\n    tasksCtx.update(editedTask);\r\n  };\r\n  const topConIconsProps = { width: 22, height: 22 };\r\n  return (\r\n    <li\r\n      className={\r\n        props.data.active\r\n          ? classes.task\r\n          : `${classes.task} ${classes.completed}`\r\n      }\r\n      style={{\r\n        background: `linear-gradient(${props.data.label.color},rgb(253, 253, 253)`,\r\n      }}\r\n    >\r\n      {showRemoveModal && (\r\n        <Modal\r\n          buttonText=\"Dont delete\"\r\n          onClose={closeRemoveModalHandler}\r\n          onAction={removeHandler.bind(null, props.data.id)}\r\n        >\r\n          Sure you want to remove\r\n          <br />\r\n          <span className={classes.modalTaskName}>{props.data.name}</span> ?\r\n        </Modal>\r\n      )}\r\n      {showTaskEditor && (\r\n        <TaskEditor\r\n          onAction={onEditActionHandler}\r\n          onClose={toggleEditHandler}\r\n          {...props}\r\n        />\r\n      )}\r\n      <div className={classes.topContainer}>\r\n        <div className={classes.date}>{props.data.date}</div>\r\n        <div className={classes.iconsCon}>\r\n          <button type=\"button\" onClick={toggleEditHandler}>\r\n            <EditIcon className={classes.editButton} {...topConIconsProps} />\r\n          </button>\r\n          <button type=\"button\" onClick={showRemoveHandler}>\r\n            <DeleteIcon className={classes.delButton} {...topConIconsProps} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <h2 className={classes.title}>{props.data.name}</h2>\r\n      {props.data.description && showDescription && (\r\n        <p>{props.data.description}</p>\r\n      )}\r\n      <div\r\n        className={classes.label}\r\n        style={{ backgroundColor: props.data.label.color }}\r\n      >\r\n        #{props.data.label.name}\r\n      </div>\r\n      <div className={classes.buttonsContainer}>\r\n        <button type=\"button\" onClick={moveHandler.bind(null, props.data.id)}>\r\n          {props.data.active ? 'Complete' : 'Activate'}\r\n          <div className={classes.icon}>\r\n            <CheckIcon width={25} height={25} />\r\n          </div>\r\n        </button>\r\n        {props.data.description && (\r\n          <button type=\"button\" onClick={toggleDescriptionHandler}>\r\n            {showDescription ? 'Hide' : 'Info'}\r\n            <div className={classes.icon}>\r\n              <InfoIcon width={25} height={25} />\r\n            </div>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task/Task';\r\nimport classes from './Lists.module.css';\r\n\r\nconst ListTasks = (props) => {\r\n  const { tasks } = props;\r\n  const v = tasks.map((task) => <Task key={task.id} data={task} />);\r\n  return (\r\n    <ul className={classes.tasksList}>\r\n      {v.length > 0 ? v : 'Nothing here yet...'}\r\n    </ul>\r\n  );\r\n};\r\nexport default ListTasks;\r\n","import Card from '../UI/Card';\r\nimport classes from './Lists.module.css';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport Filter from './Filter';\r\nimport ListTasks from './ListTasks';\r\nconst initialFilterState = {\r\n  filterMenuIsOpen: false,\r\n  filterIsOn: false,\r\n};\r\nconst List = () => {\r\n  const { chosenList, switchList, tasks } = useContext(TasksContext);\r\n  const [currentTasks, setCurrentTasks] = useState(tasks);\r\n  const [filterState, setFilterState] = useState(initialFilterState);\r\n  const listsRef = useRef();\r\n  const isActive = chosenList === 'active' ? true : false;\r\n  const switchText = isActive ? 'change to completed' : 'change to active';\r\n  const listTitle = `${\r\n    chosenList[0].toUpperCase() + chosenList.slice(1, chosenList.length)\r\n  } Notes (${tasks.length})`;\r\n  const listLabels = tasks\r\n    .map((task) => task.label)\r\n    .filter((v, i, a) => a.findIndex((t) => t.id === v.id) === i);\r\n  const filterControlsShown = listLabels.length > 1;\r\n  useEffect(() => {\r\n    setFilterState(initialFilterState);\r\n    setCurrentTasks(tasks);\r\n    const ref = listsRef;\r\n    return () => {\r\n      ref.current.scrollIntoView();\r\n    };\r\n  }, [tasks]);\r\n  const filterHandler = (option) => {\r\n    toggleFilterMenuHandler();\r\n    const filteredTasks = tasks.filter((task) => task.label.id === option);\r\n    setCurrentTasks(filteredTasks);\r\n    changeFilterStatus(true);\r\n  };\r\n  const onSwitchHandler = () => {\r\n    if (filterState.filterIsOn) changeFilterStatus(false);\r\n    if (filterState.filterMenuIsOpen) toggleFilterMenuHandler();\r\n    switchList();\r\n  };\r\n  const cancelFilterHandler = () => {\r\n    changeFilterStatus(false);\r\n    setCurrentTasks(tasks);\r\n  };\r\n  const changeFilterStatus = (status) => {\r\n    setFilterState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        filterIsOn: status,\r\n      };\r\n    });\r\n  };\r\n  const toggleFilterMenuHandler = () => {\r\n    setFilterState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        filterMenuIsOpen: !prevState.filterMenuIsOpen,\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div ref={listsRef}></div>\r\n      <Card\r\n        switchText={switchText}\r\n        onSwitch={onSwitchHandler}\r\n        toggleIconOn={isActive}\r\n        title={listTitle}\r\n        className={classes.listCard}\r\n      >\r\n        {filterControlsShown && (\r\n          <Filter\r\n            isOn={filterState.filterIsOn}\r\n            onToggleMenu={toggleFilterMenuHandler}\r\n            onFilter={filterHandler}\r\n            onCancel={cancelFilterHandler}\r\n            menuIsOpen={filterState.filterMenuIsOpen}\r\n            options={listLabels}\r\n          />\r\n        )}\r\n        {!filterState.filterMenuIsOpen && <ListTasks tasks={currentTasks} />}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport TasksContext from './tasks-context';\r\nimport { creationDate } from './tasks-helper';\r\nconst savedTasks = localStorage.getItem('tasks');\r\nconst savedLabels = localStorage.getItem('labels');\r\nconst defaultTasksState = {\r\n  chosenList: 'active',\r\n  tasks: savedTasks ? JSON.parse(savedTasks) : [],\r\n  labels: savedLabels\r\n    ? JSON.parse(savedLabels)\r\n    : [{ id: 'def', name: 'General', color: '#0000003b' }],\r\n};\r\nfunction tasksReducer(state, action) {\r\n  let updatedTasks = [...state.tasks];\r\n  switch (action.type) {\r\n    case 'SWITCH_LIST':\r\n      const chosenList = state.chosenList === 'active' ? 'completed' : 'active';\r\n      return {\r\n        ...state,\r\n        chosenList: chosenList,\r\n      };\r\n    case 'ADDLABEL':\r\n      const label = action.value;\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, label],\r\n      };\r\n    case 'DELETELABEL':\r\n      const deletedLabelId = action.value;\r\n      const updatedLabels = state.labels.filter(\r\n        (label) => label.id !== deletedLabelId\r\n      );\r\n      return {\r\n        ...state,\r\n        labels: [...updatedLabels],\r\n      };\r\n    case 'ADD':\r\n      const task = action.value;\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          { ...task, active: true, date: creationDate() },\r\n          ...updatedTasks,\r\n        ],\r\n      };\r\n    case 'UPDATE':\r\n      const editedTaskId = action.value.id;\r\n\r\n      const editedTask = action.value;\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          editedTask,\r\n          ...updatedTasks.filter((task) => task.id !== editedTaskId),\r\n        ],\r\n      };\r\n    case 'MOVE':\r\n      const movedTaskId = action.value;\r\n      const movedTaskIdx = state.tasks.findIndex(\r\n        (task) => task.id === movedTaskId\r\n      );\r\n      const movedTask = updatedTasks[movedTaskIdx];\r\n      const updatedTask = { ...movedTask, active: !movedTask.active };\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          updatedTask,\r\n          ...updatedTasks.filter((task) => task.id !== movedTaskId),\r\n        ],\r\n      };\r\n\r\n    case 'REMOVE':\r\n      const deletedTaskId = action.value;\r\n      updatedTasks = updatedTasks.filter((task) => task.id !== deletedTaskId);\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n    default:\r\n      return defaultTasksState;\r\n  }\r\n}\r\n\r\nexport const TasksProvider = (props) => {\r\n  const [tasksState, dispatchTasksAction] = useReducer(\r\n    tasksReducer,\r\n    defaultTasksState\r\n  );\r\n  const { tasks, labels, chosenList } = tasksState;\r\n  const listTasks = tasks.filter((task) =>\r\n    chosenList === 'active' ? task.active === true : task.active !== true\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    localStorage.setItem('labels', JSON.stringify(labels));\r\n  }, [tasks, labels]);\r\n\r\n  const addLabelHandler = (label) => {\r\n    dispatchTasksAction({ type: 'ADDLABEL', value: label });\r\n  };\r\n  const addHandler = (task) => {\r\n    chosenList === 'completed' && switchListHandler();\r\n    dispatchTasksAction({ type: 'ADD', value: task });\r\n  };\r\n  const moveHandler = (id) => {\r\n    dispatchTasksAction({ type: 'MOVE', value: id });\r\n  };\r\n  const removeHandler = (id) => {\r\n    dispatchTasksAction({ type: 'REMOVE', value: id });\r\n  };\r\n  const updateHandler = (updatedTask) => {\r\n    dispatchTasksAction({ type: 'UPDATE', value: updatedTask });\r\n  };\r\n  const deleteLabelHandler = (id) => {\r\n    dispatchTasksAction({ type: 'DELETELABEL', value: id });\r\n  };\r\n  const switchListHandler = () => {\r\n    dispatchTasksAction({ type: 'SWITCH_LIST' });\r\n  };\r\n\r\n  const tasksContext = {\r\n    allTasks: tasks,\r\n    tasks: listTasks,\r\n    chosenList: chosenList,\r\n    labels: labels,\r\n    addLabel: addLabelHandler,\r\n    deleteLabel: deleteLabelHandler,\r\n    add: addHandler,\r\n    move: moveHandler,\r\n    remove: removeHandler,\r\n    update: updateHandler,\r\n    switchList: switchListHandler,\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider value={tasksContext}>\r\n      {props.children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TasksProvider;\r\n","import Modal from '../UI/Modal';\r\nimport { useState } from 'react';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useContext } from 'react';\r\nconst shoppingLabel = {\r\n  name: 'shopping',\r\n  color: '#04f43f3b',\r\n  id: 'cc2hfnid6ysnzg0rhil',\r\n};\r\nconst sportsLabel = {\r\n  name: 'sports',\r\n  color: '#ffeb003b',\r\n  id: 'kv2ydwid5fznzg1rbiw',\r\n};\r\nconst codingLabel = {\r\n  name: 'coding',\r\n  color: '#042df43b',\r\n  id: 'fh7usjlt9mqkbiwsek0',\r\n};\r\nconst IntroModal = () => {\r\n  const tasksCtx = useContext(TasksContext);\r\n  const [showIntroModal, setShowIntroModal] = useState(true);\r\n\r\n  const createDummyContent = () => {\r\n    tasksCtx.addLabel({ ...shoppingLabel });\r\n    tasksCtx.addLabel({ ...sportsLabel });\r\n    tasksCtx.addLabel({ ...codingLabel });\r\n    tasksCtx.add({\r\n      id: '00000001',\r\n      name: 'Buy tomatos',\r\n      description: '2kg from the new store',\r\n      label: { ...shoppingLabel },\r\n    });\r\n    tasksCtx.add({\r\n      id: '00000002',\r\n      name: 'Go for a run',\r\n      description: 'for a 55 minutes atleast!',\r\n      label: { ...sportsLabel },\r\n    });\r\n    tasksCtx.add({\r\n      id: '00000003',\r\n      name: 'Do some push-ups',\r\n      description: 'as much as possible!',\r\n      label: { ...sportsLabel },\r\n    });\r\n    tasksCtx.add({\r\n      id: '00000004',\r\n      name: 'Order sushi',\r\n      description: '2 combinations of veggie rolls',\r\n      label: { ...shoppingLabel },\r\n    });\r\n    tasksCtx.add({\r\n      id: '00000005',\r\n      name: 'learn Redux',\r\n      description: 'from Udemy- react course',\r\n      label: { ...codingLabel },\r\n    });\r\n    tasksCtx.move('00000004');\r\n    tasksCtx.move('00000003');\r\n  };\r\n  return (\r\n    <>\r\n      {showIntroModal &&\r\n        (tasksCtx.allTasks.length > 0 || tasksCtx.labels.length > 1 ? (\r\n          ''\r\n        ) : (\r\n          <Modal\r\n            color=\"default\"\r\n            buttonText=\"Nope, Fresh start\"\r\n            onClose={() => {\r\n              setShowIntroModal(false);\r\n            }}\r\n            onAction={() => {\r\n              createDummyContent();\r\n              setShowIntroModal(false);\r\n            }}\r\n          >\r\n            App has nothing to show!\r\n            <br />\r\n            would you like to load some dummy data into it?\r\n          </Modal>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IntroModal;\r\n","import classes from './App.module.css';\nimport Header from './components/Layout/Header';\nimport Footer from './components/Layout/Footer';\nimport TaskGenerator from './components/TaskGenerator/TaskGenerator';\nimport List from './components/Lists/List';\nimport { TasksProvider } from './store/TasksProvider';\nimport IntroModal from './components/IntroModal/IntroModal';\nconst App = () => {\n  const labelColors = [\n    { hex: '#0000003b', colorName: 'Grey' },\n    { hex: '#04f43f3b', colorName: 'Green' },\n    { hex: '#f4041e3b', colorName: 'Red' },\n    { hex: '#e804f43b', colorName: 'Pink' },\n    { hex: '#ffeb003b', colorName: 'Yellow' },\n    { hex: '#042df43b', colorName: 'Blue' },\n  ];\n\n  return (\n    <div className={classes.app}>\n      <Header title=\"Noter\" />\n      <TasksProvider>\n        <IntroModal />\n        <main>\n          <TaskGenerator labelColors={labelColors} />\n          <List />\n        </main>\n        <Footer />\n      </TasksProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}