{"version":3,"sources":["components/TaskGenerator/TaskGenerator.module.css","components/Lists/Task/Task.module.css","components/UI/Card.module.css","components/UI/Modal.module.css","components/Lists/Lists.module.css","App.module.css","components/Layout/Header.module.css","components/Layout/Footer.module.css","components/UI/Input.module.css","components/UI/Icons/PencilSVG.js","components/Layout/Header.js","components/Layout/Footer.js","components/UI/Input.js","store/tasks-context.js","components/UI/Icons/LabelDeleteIcon.js","components/TaskGenerator/OptionButton.js","components/TaskGenerator/FormButton.js","components/TaskGenerator/TaskForm.js","components/TaskGenerator/LabelForm.js","components/UI/MainOnIcon.js","components/UI/MainOffIcon.js","components/UI/Card.js","store/tasks-helper.js","components/UI/Modal.js","components/TaskGenerator/TaskGenerator.js","components/UI/Icons/CheckIcon.js","components/UI/Icons/InfoIcon.js","components/UI/Icons/DeleteIcon.js","components/Lists/Task/Task.js","components/Lists/List.js","components/Lists/Lists.js","store/TasksProvider.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PencilIcon","props","xmlns","width","height","fill","className","viewBox","d","Header","classes","header","title","Footer","footer","Input","React","forwardRef","ref","TextField","defaultValue","type","input","id","label","variant","onChange","inputRef","multiline","rows","row","TasksContext","createContext","tasks","add","move","remove","LabelDeleteIcon","fillColor","OptionButton","option","chosen","deleteOption","onClick","delButton","icon","color","labelButton","style","backgroundColor","FormButton","Button","formButton","text","TaskForm","useState","chosenLabel","setChosenLabel","nameInput","useRef","descriptionInput","tasksCtx","useContext","chooseLabelHandler","deleteLabelHandler","labelId","deleteLabel","labels","map","isChosen","bind","name","autoComplete","onSubmit","event","preventDefault","current","value","description","trim","length","onError","onAddNewTask","lastInputsData","toggleView","labelsList","LabelForm","labelColors","hex","chosenColor","setChosenColor","labelNameInput","chooseColorHandler","colorOptions","colorName","replace","labelName","onAddNewLabel","MainOnIcon","MainOffIcon","Card","card","onShow","switchText","toggleIconOn","mainContent","children","creationDate","today","Date","getDate","getMonth","getHours","getMinutes","dd","mm","hour","min","getFullYear","getDay","yyyy","randId","now","toString","Math","random","substr","Backdrop","backdrop","ModalOverlay","console","log","modal","content","buttonsContainer","onClose","buttonText","onAction","portalElement","document","getElementById","Modal","ReactDOM","createPortal","defaultLabel","defaultGenState","mainFormView","currentInputsData","formError","genReducer","state","action","error","TaskGenerator","useReducer","genState","dispatchGenAction","onErroHandler","gen","task","onDeleteLabel","inputsData","newLabel","updatedNewLabel","addLabel","CheckIcon","infoIcon","DeleteIcon","Task","showDescription","setShowDescription","showRemoveModal","setShowRemoveModal","data","active","completed","background","modalTaskName","topContainer","date","deleteButton","InfoIcon","List","listCard","tasksList","Lists","isActiveShown","isCompletedShown","listViewState","setListViewState","activeTasks","filter","completedTasks","showHandler","savedTasks","localStorage","getItem","savedLabels","defaultTasksState","JSON","parse","tasksReducer","updatedTasks","deletedLabelId","updatedLabels","movedTaskId","movedTaskIdx","findIndex","movedTask","updatedTask","deletedTaskId","TasksProvider","tasksState","dispatchTasksAction","useEffect","setItem","stringify","tasksContext","Provider","App","saveToLocalStorage","window","addEventListener","removeEventListener","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.610b1a9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"TaskGenerator_formButton__2rDnS\",\"gen\":\"TaskGenerator_gen__OH5Ca\",\"labelsList\":\"TaskGenerator_labelsList__1DknC\",\"option\":\"TaskGenerator_option__1FuX3\",\"labelButton\":\"TaskGenerator_labelButton__1_irb\",\"delButton\":\"TaskGenerator_delButton__HHdN5\",\"chosen\":\"TaskGenerator_chosen__3Wy_g\",\"icon\":\"TaskGenerator_icon__3nCQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1rJHX\",\"topContainer\":\"Task_topContainer__14lcd\",\"date\":\"Task_date__5DF-i\",\"title\":\"Task_title__1sxnH\",\"completed\":\"Task_completed__1KEmB\",\"label\":\"Task_label__D89nM\",\"buttonsContainer\":\"Task_buttonsContainer__2fy2f\",\"modalTaskName\":\"Task_modalTaskName__d3qlZ\",\"icon\":\"Task_icon__1PomF\",\"deleteButton\":\"Task_deleteButton__1xL8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1NlOb\",\"header\":\"Card_header__1EsBM\",\"icon\":\"Card_icon__2NNQZ\",\"expanded\":\"Card_expanded__242JD\",\"mainContent\":\"Card_mainContent__3ZezA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2B7vN\",\"modal\":\"Modal_modal__35tKt\",\"slide-down\":\"Modal_slide-down__2hmTo\",\"buttonsContainer\":\"Modal_buttonsContainer__1Jb2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksList\":\"Lists_tasksList__1K9Aj\",\"listCard\":\"Lists_listCard__39v9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YFrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eXYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PgvOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__IG9Qu\"};","const PencilIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-check2-square\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M3 14.5A1.5 1.5 0 0 1 1.5 13V3A1.5 1.5 0 0 1 3 1.5h8a.5.5 0 0 1 0 1H3a.5.5 0 0 0-.5.5v10a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V8a.5.5 0 0 1 1 0v5a1.5 1.5 0 0 1-1.5 1.5H3z\" />\r\n      <path d=\"m8.354 10.354 7-7a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PencilIcon;\r\n","import PencilIcon from '../UI/Icons/PencilSVG';\r\nimport classes from '../Layout/Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <h1>{props.title}</h1>\r\n        <PencilIcon width={20} height={20} />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from '../Layout/Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className={classes.footer}>\r\n        <p> by Omer Zabtani</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classes from './Input.module.css';\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      defaultValue={props.defaultValue}\r\n      type=\"text\"\r\n      className={classes.input}\r\n      id={props.id}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n      onChange={props.onChange}\r\n      inputRef={ref}\r\n      multiline={props.multiline ? true : null}\r\n      rows={props.row ? props.row : null}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nexport const TasksContext = React.createContext({\r\n  tasks: [],\r\n  add: () => {},\r\n  move: (id) => {},\r\n  remove: () => {},\r\n});\r\n\r\nexport default TasksContext;\r\n","const LabelDeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill={props.fillColor}\r\n      className={`bi bi-backspace-reverse-fill ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M0 3a2 2 0 0 1 2-2h7.08a2 2 0 0 1 1.519.698l4.843 5.651a1 1 0 0 1 0 1.302L10.6 14.3a2 2 0 0 1-1.52.7H2a2 2 0 0 1-2-2V3zm9.854 2.854a.5.5 0 0 0-.708-.708L7 7.293 4.854 5.146a.5.5 0 1 0-.708.708L6.293 8l-2.147 2.146a.5.5 0 0 0 .708.708L7 8.707l2.146 2.147a.5.5 0 0 0 .708-.708L7.707 8l2.147-2.146z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LabelDeleteIcon;\r\n","import classes from './TaskGenerator.module.css';\r\nimport LabelDeleteIcon from '../UI/Icons/LabelDeleteIcon';\r\nconst OptionButton = (props) => {\r\n  return (\r\n    <li className={`${classes.option} ${props.chosen && classes.chosen}  `}>\r\n      {props.deleteOption && props.chosen && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.deleteOption}\r\n          className={classes.delButton}\r\n        >\r\n          <LabelDeleteIcon\r\n            className={classes.icon}\r\n            fillColor={props.color}\r\n            width={24}\r\n            height={24}\r\n          />\r\n        </button>\r\n      )}\r\n      <button\r\n        className={classes.labelButton}\r\n        type=\"button\"\r\n        style={{ backgroundColor: props.color }}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.title}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst FormButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={props.color}\r\n      type={props.type}\r\n      className={classes.formButton}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Input from '../UI/Input';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useRef, useState, useContext } from 'react';\r\nimport OptionButton from './OptionButton';\r\nimport FormButton from './FormButton';\r\n\r\nconst TaskForm = (props) => {\r\n  const [chosenLabel, setChosenLabel] = useState(props.chosenLabel);\r\n  const nameInput = useRef();\r\n  const descriptionInput = useRef();\r\n  const tasksCtx = useContext(TasksContext);\r\n\r\n  const addNewTaskHandler = (event) => {\r\n    event.preventDefault();\r\n    const name = nameInput.current.value;\r\n    const description = descriptionInput.current.value;\r\n    if (name.trim('').length < 3) {\r\n      props.onError('note name is too short');\r\n      return;\r\n    }\r\n\r\n    props.onAddNewTask({\r\n      name: name,\r\n      description: description,\r\n      label: chosenLabel,\r\n    });\r\n    nameInput.current.value = '';\r\n    descriptionInput.current.value = '';\r\n  };\r\n  const chooseLabelHandler = (label) => {\r\n    setChosenLabel(label);\r\n  };\r\n  const toggleView = () => {\r\n    props.toggleView({\r\n      name: nameInput.current.value,\r\n      description: descriptionInput.current.value,\r\n    });\r\n  };\r\n\r\n  const deleteLabelHandler = (labelId) => {\r\n    setChosenLabel(props.chosenLabel);\r\n    tasksCtx.deleteLabel(labelId);\r\n  };\r\n\r\n  const labels = props.labels.map((label) => {\r\n    const isChosen = label.id === chosenLabel.id ? true : false;\r\n    return (\r\n      <OptionButton\r\n        deleteOption={\r\n          label.id === 'def' ? false : deleteLabelHandler.bind(null, label.id)\r\n        }\r\n        chosen={isChosen}\r\n        key={label.id}\r\n        title={label.name}\r\n        color={label.color}\r\n        onClick={chooseLabelHandler.bind(null, label)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewTaskHandler}>\r\n        <p>\r\n          Add name and description to the note,\r\n          <br />\r\n          then choose a label or create one.\r\n        </p>\r\n\r\n        <Input\r\n          label=\"Note name\"\r\n          id=\"name\"\r\n          ref={nameInput}\r\n          defaultValue={props.lastInputsData.name}\r\n        />\r\n        <Input\r\n          defaultValue={props.lastInputsData.description}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          multiline={true}\r\n          row={4}\r\n          ref={descriptionInput}\r\n        />\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Note\" />\r\n        <FormButton type=\"button\" onClick={toggleView} text=\"Add new label\" />\r\n        <ul className={classes.labelsList}>{labels}</ul>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import Input from '../UI/Input';\r\nimport classes from './TaskGenerator.module.css';\r\nimport FormButton from './FormButton';\r\nimport { useRef, useState } from 'react';\r\nimport OptionButton from './OptionButton';\r\n\r\nconst LabelForm = (props) => {\r\n  const [chosenColor, setChosenColor] = useState(props.labelColors[0].hex);\r\n  const labelNameInput = useRef();\r\n  const addNewLabelHandler = (event) => {\r\n    event.preventDefault();\r\n    const labelName = labelNameInput.current.value;\r\n    if (labelName.length < 3) {\r\n      props.onError('label is too short!');\r\n      return;\r\n    }\r\n    props.onAddNewLabel({\r\n      name: labelName,\r\n      color: chosenColor,\r\n    });\r\n    props.toggleView();\r\n  };\r\n  const chooseColorHandler = (color) => {\r\n    setChosenColor(color);\r\n  };\r\n  const colorOptions = props.labelColors.map((color) => {\r\n    const isChosen = chosenColor === color.hex;\r\n    return (\r\n      <OptionButton\r\n        deleteOption={false}\r\n        chosen={isChosen}\r\n        key={color.hex.replace('#', '')}\r\n        color={color.hex}\r\n        title={color.colorName}\r\n        type=\"button\"\r\n        value={color.hex}\r\n        label=\"Description\"\r\n        onClick={chooseColorHandler.bind(null, color.hex)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewLabelHandler}>\r\n        <p>Choose a name then a color for this new label!</p>\r\n        <Input label=\"Label name\" ref={labelNameInput} />\r\n        <ul className={classes.labelsList}>{colorOptions}</ul>\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Label\" />\r\n        <FormButton type=\"button\" text=\"Go back\" onClick={props.toggleView} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LabelForm;\r\n","const MainOnIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"whitesmoke\"\r\n      className={`bi bi-toggle-on ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M5 3a5 5 0 0 0 0 10h6a5 5 0 0 0 0-10H5zm6 9a4 4 0 1 1 0-8 4 4 0 0 1 0 8z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default MainOnIcon;\r\n","const MainOffIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className={`bi bi-toggle-off ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M11 4a4 4 0 0 1 0 8H8a4.992 4.992 0 0 0 2-4 4.992 4.992 0 0 0-2-4h3zm-6 8a4 4 0 1 1 0-8 4 4 0 0 1 0 8zM0 8a5 5 0 0 0 5 5h6a5 5 0 0 0 0-10H5a5 5 0 0 0-5 5z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default MainOffIcon;\r\n","import classes from './Card.module.css';\r\nimport MainOnIcon from './MainOnIcon';\r\nimport MainOffIcon from './MainOffIcon';\r\nconst Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className={`${classes.card} ${props.className}`}>\r\n        <div className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n          {props.onShow && (\r\n            <button type=\"button\" onClick={props.onShow}>\r\n              {props.switchText}\r\n              {props.toggleIconOn ? (\r\n                <MainOnIcon className={classes.icon} width=\"35\" height=\"35\" />\r\n              ) : (\r\n                <MainOffIcon className={classes.icon} width=\"35\" height=\"35\" />\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.mainContent}>{props.children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export const creationDate = () => {\r\n  const today = new Date();\r\n  let [dd, mm, hour, min] = [\r\n    today.getDate(),\r\n    today.getMonth() + 1,\r\n    today.getHours(),\r\n    today.getMinutes(),\r\n  ];\r\n  const [yyyy, day, weekDays] = [\r\n    today.getFullYear(),\r\n    today.getDay(),\r\n    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  ];\r\n\r\n  if (dd < 10) dd = '0' + dd;\r\n  if (mm < 10) mm = '0' + mm;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n  const creationTime = ` ${weekDays[day]}, ${dd}/${mm}/${yyyy}, ${hour}:${min}`;\r\n  return creationTime;\r\n};\r\nexport const randId = () => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n","import classes from './Modal.module.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className={classes.modal}>\r\n      <p className={classes.content}>{props.children}</p>\r\n      <div className={classes.buttonsContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"button\"\r\n          onClick={props.onClose}\r\n        >\r\n          {props.buttonText}\r\n        </Button>\r\n\r\n        {props.onAction && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"button\"\r\n            onClick={props.onAction}\r\n          >\r\n            approve\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById('overlays');\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          buttonText={props.buttonText}\r\n          onClose={props.onClose}\r\n          onAction={props.onAction}\r\n        >\r\n          {props.children}\r\n        </ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useContext, useReducer } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport LabelForm from './LabelForm';\r\nimport Card from '../UI/Card';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { randId } from '../../store/tasks-helper';\r\nimport classes from './TaskGenerator.module.css';\r\nimport Modal from '../UI/Modal';\r\nconst defaultLabel = { id: 'def', name: 'General', color: '#0000003b' };\r\nconst defaultGenState = {\r\n  mainFormView: true,\r\n  currentInputsData: { name: '', description: '' },\r\n  chosenLabel: defaultLabel,\r\n  formError: false,\r\n};\r\nconst genReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHOOSE_LABEL':\r\n      const chosenLabel = action.value;\r\n      return {\r\n        ...state,\r\n        chosenLabel: chosenLabel,\r\n      };\r\n\r\n    case 'SWITCH_TO_TASK_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: true,\r\n      };\r\n\r\n    case 'SWITCH_TO_LABEL_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: false,\r\n        currentInputsData: action.value,\r\n      };\r\n\r\n    case 'FORM_ERROR':\r\n      const error = action.value;\r\n      return {\r\n        ...state,\r\n        formError: error,\r\n      };\r\n\r\n    default:\r\n      return defaultGenState;\r\n  }\r\n};\r\nconst TaskGenerator = (props) => {\r\n  const [genState, dispatchGenAction] = useReducer(genReducer, defaultGenState);\r\n  const tasksCtx = useContext(TasksContext);\r\n  const onAddNewTaskHandler = (task) => {\r\n    tasksCtx.add({ ...task, id: randId() });\r\n  };\r\n  const onAddNewLabelHandler = (newLabel) => {\r\n    const updatedNewLabel = { ...newLabel, id: randId() };\r\n    dispatchGenAction({ type: 'CHOOSE_LABEL', value: updatedNewLabel });\r\n    tasksCtx.addLabel(updatedNewLabel);\r\n  };\r\n  const onDeleteLabelHandler = () => {\r\n    dispatchGenAction({ type: 'CHOOSE_LABEL', value: defaultLabel });\r\n  };\r\n  const switchToTaskFormHandler = () => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_TASK_FORM' });\r\n  };\r\n  const switchToLabelFormHandler = (inputsData) => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_LABEL_FORM', value: inputsData });\r\n  };\r\n  const onErroHandler = (error) => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: error });\r\n  };\r\n  const closeErrorModalHandler = () => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: false });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.gen} title=\"New Note\">\r\n      {genState.formError && (\r\n        <Modal buttonText=\"Back To App\" onClose={closeErrorModalHandler}>\r\n          {genState.formError}\r\n        </Modal>\r\n      )}\r\n      {genState.mainFormView && (\r\n        <TaskForm\r\n          onError={onErroHandler}\r\n          lastInputsData={\r\n            genState.currentInputsData && genState.currentInputsData\r\n          }\r\n          chosenLabel={genState.chosenLabel}\r\n          onAddNewTask={onAddNewTaskHandler}\r\n          onDeleteLabel={onDeleteLabelHandler}\r\n          toggleView={switchToLabelFormHandler}\r\n          labels={tasksCtx.labels}\r\n        />\r\n      )}\r\n      {!genState.mainFormView && (\r\n        <LabelForm\r\n          onError={onErroHandler}\r\n          labelColors={props.labelColors}\r\n          onAddNewLabel={onAddNewLabelHandler}\r\n          toggleView={switchToTaskFormHandler}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskGenerator;\r\n","const CheckIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-check-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CheckIcon;\r\n","const infoIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-info-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default infoIcon;\r\n","const DeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-x-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteIcon;\r\n","import classes from './Task.module.css';\r\nimport CheckIcon from '../../UI/Icons/CheckIcon';\r\nimport InfoIcon from '../../UI/Icons/InfoIcon';\r\nimport DeleteIcon from '../../UI/Icons/DeleteIcon';\r\nimport { useContext, useState } from 'react';\r\nimport TasksContext from '../../../store/tasks-context';\r\nimport Modal from '../../UI/Modal';\r\nconst Task = (props) => {\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\r\n  const tasksCtx = useContext(TasksContext);\r\n  const toggleDescriptionHandler = () => {\r\n    setShowDescription(!showDescription);\r\n  };\r\n  const showRemoveHandler = (id) => {\r\n    setShowRemoveModal(true);\r\n  };\r\n  const removeHandler = (id) => {\r\n    tasksCtx.remove(id);\r\n  };\r\n  const moveHandler = (id) => {\r\n    tasksCtx.move(id);\r\n  };\r\n  const closeRemoveModalHandler = () => {\r\n    setShowRemoveModal(false);\r\n  };\r\n  return (\r\n    <div\r\n      className={\r\n        props.data.active\r\n          ? classes.task\r\n          : `${classes.task} ${classes.completed}`\r\n      }\r\n      style={{\r\n        background: `linear-gradient(${props.data.label.color},rgb(253, 253, 253)`,\r\n      }}\r\n    >\r\n      {showRemoveModal && (\r\n        <Modal\r\n          buttonText=\"Dont delete\"\r\n          onClose={closeRemoveModalHandler}\r\n          onAction={removeHandler.bind(null, props.data.id)}\r\n        >\r\n          Sure you want to remove\r\n          <br />\r\n          <span className={classes.modalTaskName}>{props.data.name}</span> ?\r\n        </Modal>\r\n      )}\r\n      <div className={classes.topContainer}>\r\n        <div className={classes.date}>{props.data.date}</div>\r\n        <button type=\"button\" onClick={showRemoveHandler}>\r\n          <DeleteIcon className={classes.deleteButton} width={19} height={19} />\r\n        </button>\r\n      </div>\r\n      <h2 className={classes.title}>{props.data.name}</h2>\r\n      {props.data.description && showDescription && (\r\n        <p>{props.data.description}</p>\r\n      )}\r\n      <div\r\n        className={classes.label}\r\n        style={{ backgroundColor: props.data.label.color }}\r\n      >\r\n        #{props.data.label.name}\r\n      </div>\r\n      <div className={classes.buttonsContainer}>\r\n        <button type=\"button\" onClick={moveHandler.bind(null, props.data.id)}>\r\n          {props.data.active ? 'Complete' : 'Activate'}\r\n          <div className={classes.icon}>\r\n            <CheckIcon width={25} height={25} />\r\n          </div>\r\n        </button>\r\n        {props.data.description && (\r\n          <button type=\"button\" onClick={toggleDescriptionHandler}>\r\n            {showDescription ? 'Hide paragraph' : 'Info'}\r\n            <div className={classes.icon}>\r\n              <InfoIcon width={25} height={25} />\r\n            </div>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import Card from '../UI/Card';\r\nimport Task from './Task/Task';\r\nimport classes from './Lists.module.css';\r\nconst List = (props) => {\r\n  const tasks = props.tasks.map((task) => <Task key={task.id} data={task} />);\r\n  return (\r\n    <Card\r\n      switchText={\r\n        props.toggleIconOn ? 'change to completed' : 'change to active'\r\n      }\r\n      onShow={props.onShow}\r\n      toggleIconOn={props.toggleIconOn}\r\n      className={classes.listCard}\r\n      active={props.active}\r\n      title={props.title}\r\n    >\r\n      <div className={classes.tasksList}>\r\n        {tasks.length > 0 ? tasks : 'Nothing here yet...'}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import List from './List';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useContext, useState } from 'react';\r\nconst Lists = () => {\r\n  const { tasks } = useContext(TasksContext);\r\n  const [listViewState, setListViewState] = useState({\r\n    isActiveShown: true,\r\n    isCompletedShown: false,\r\n  });\r\n  const activeTasks = tasks.filter((task) => task.active === true);\r\n  const completedTasks = tasks.filter((task) => task.active !== true);\r\n  const showHandler = () => {\r\n    setListViewState((state) => {\r\n      return {\r\n        isActiveShown: !state.isActiveShown,\r\n        isCompletedShown: !state.isCompletedShown,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {listViewState.isActiveShown && (\r\n        <List\r\n          toggleIconOn={true}\r\n          onShow={showHandler}\r\n          tasks={activeTasks}\r\n          title=\"Active\"\r\n        />\r\n      )}\r\n      {listViewState.isCompletedShown && (\r\n        <List\r\n          toggleIconOn={false}\r\n          onShow={showHandler}\r\n          tasks={completedTasks}\r\n          title=\"Completed\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport TasksContext from './tasks-context';\r\nimport { creationDate } from './tasks-helper';\r\nconst savedTasks = localStorage.getItem('tasks');\r\nconst savedLabels = localStorage.getItem('labels');\r\nconst defaultTasksState = {\r\n  tasks: savedTasks ? JSON.parse(savedTasks) : [],\r\n  labels: savedLabels\r\n    ? JSON.parse(savedLabels)\r\n    : [{ id: 'def', name: 'General', color: '#0000003b' }],\r\n};\r\nfunction tasksReducer(state, action) {\r\n  let updatedTasks = [...state.tasks];\r\n  switch (action.type) {\r\n    case 'ADDLABEL':\r\n      const label = action.value;\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, label],\r\n      };\r\n    case 'DELETELABEL':\r\n      const deletedLabelId = action.value;\r\n      const updatedLabels = state.labels.filter(\r\n        (label) => label.id !== deletedLabelId\r\n      );\r\n      return {\r\n        ...state,\r\n        labels: [...updatedLabels],\r\n      };\r\n    case 'ADD':\r\n      const task = action.value;\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          ...updatedTasks,\r\n          { ...task, active: true, date: creationDate() },\r\n        ],\r\n      };\r\n    case 'MOVE':\r\n      const movedTaskId = action.value;\r\n      const movedTaskIdx = state.tasks.findIndex(\r\n        (task) => task.id === movedTaskId\r\n      );\r\n      const movedTask = updatedTasks[movedTaskIdx];\r\n      const updatedTask = { ...movedTask, active: !movedTask.active };\r\n      updatedTasks[movedTaskIdx] = updatedTask;\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n\r\n    case 'REMOVE':\r\n      const deletedTaskId = action.value;\r\n      updatedTasks = updatedTasks.filter((task) => task.id !== deletedTaskId);\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n    default:\r\n      return defaultTasksState;\r\n  }\r\n}\r\nexport const TasksProvider = (props) => {\r\n  const [tasksState, dispatchTasksAction] = useReducer(\r\n    tasksReducer,\r\n    defaultTasksState\r\n  );\r\n  const { tasks } = tasksState;\r\n  const { labels } = tasksState;\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    localStorage.setItem('labels', JSON.stringify(labels));\r\n  }, [tasks, labels]);\r\n  const addLabelHandler = (label) => {\r\n    dispatchTasksAction({ type: 'ADDLABEL', value: label });\r\n  };\r\n  const addHandler = (task) => {\r\n    dispatchTasksAction({ type: 'ADD', value: task });\r\n  };\r\n  const moveHandler = (id) => {\r\n    dispatchTasksAction({ type: 'MOVE', value: id });\r\n  };\r\n  const removeHandler = (id) => {\r\n    dispatchTasksAction({ type: 'REMOVE', value: id });\r\n  };\r\n  const deleteLabelHandler = (id) => {\r\n    dispatchTasksAction({ type: 'DELETELABEL', value: id });\r\n  };\r\n\r\n  const tasksContext = {\r\n    labels: labels,\r\n    tasks: tasks,\r\n    addLabel: addLabelHandler,\r\n    deleteLabel: deleteLabelHandler,\r\n    add: addHandler,\r\n    move: moveHandler,\r\n    remove: removeHandler,\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider value={tasksContext}>\r\n      {props.children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TasksProvider;\r\n","import { useEffect } from 'react';\nimport classes from './App.module.css';\nimport Header from './components/Layout/Header';\nimport Footer from './components/Layout/Footer';\nimport TaskGenerator from './components/TaskGenerator/TaskGenerator';\nimport Lists from './components/Lists/Lists';\nimport { TasksProvider } from './store/TasksProvider';\nconst App = () => {\n  const labelColors = [\n    { hex: '#0000003b', colorName: 'Grey' },\n    { hex: '#04f43f3b', colorName: 'Green' },\n    { hex: '#f4041e3b', colorName: 'Red' },\n    { hex: '#e804f43b', colorName: 'Pink' },\n    { hex: '#ffeb003b', colorName: 'Yellow' },\n    { hex: '#042df43b', colorName: 'Blue' },\n  ];\n  useEffect(() => {\n    const saveToLocalStorage = () => {\n      localStorage.setItem('dodo', 'drerei');\n    };\n    window.addEventListener('beforeunload', saveToLocalStorage);\n    return () => {\n      window.removeEventListener('beforeunload', saveToLocalStorage);\n    };\n  }, []);\n\n  return (\n    <div className={classes.app}>\n      <Header title=\"Noter\" />\n      <TasksProvider>\n        <main>\n          <TaskGenerator labelColors={labelColors} />\n          <Lists />\n        </main>\n      </TasksProvider>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}