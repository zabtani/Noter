{"version":3,"sources":["components/TaskGenerator/TaskGenerator.module.css","components/Lists/Task/Task.module.css","components/UI/Card.module.css","components/UI/Modal.module.css","components/Lists/Lists.module.css","App.module.css","components/Layout/Header.module.css","components/Layout/Footer.module.css","components/UI/Input.module.css","components/Layout/PencilSVG.js","components/Layout/Header.js","components/Layout/Footer.js","components/UI/Input.js","components/TaskGenerator/LabelDeleteIcon.js","components/TaskGenerator/OptionButton.js","components/TaskGenerator/FormButton.js","components/TaskGenerator/TaskForm.js","components/TaskGenerator/LabelForm.js","components/UI/ExpandIcon.js","components/UI/MinimizeIcon.js","components/UI/Card.js","store/tasks-context.js","store/tasks-helper.js","components/UI/Modal.js","components/TaskGenerator/TaskGenerator.js","components/Lists/Task/CheckIcon.js","components/Lists/Task/InfoIcon.js","components/Lists/Task/DeleteIcon.js","components/Lists/Task/Task.js","components/Lists/List.js","components/Lists/Lists.js","store/TasksProvider.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PencilIcon","props","xmlns","width","height","fill","className","viewBox","d","Header","classes","header","title","Footer","footer","Input","React","forwardRef","ref","TextField","defaultValue","type","input","id","label","variant","onChange","inputRef","multiline","rows","row","LabelDeleteIcon","fillColor","OptionButton","option","chosen","delButton","icon","color","labelButton","style","backgroundColor","onClick","FormButton","Button","formButton","text","TaskForm","useState","chosenLabel","setChosenLabel","nameInput","useRef","descriptionInput","chooseLabelHandler","labels","map","isChosen","name","bind","autoComplete","onSubmit","event","preventDefault","current","value","description","trim","length","onError","onAddNewTask","lastInputsData","toggleView","labelsList","labelColors","chosenColor","setChosenColor","labelNameInput","chooseColorHandler","colorOptions","hex","colorName","replace","labelName","onAddNewLabel","ExpandIcon","fillRule","MinimizeIcon","Card","card","onExpand","expanded","mainContent","children","TasksContext","createContext","tasks","add","move","remove","creationDate","today","Date","getDate","getMonth","getHours","getMinutes","dd","mm","hour","min","getFullYear","getDay","yyyy","randId","now","toString","Math","random","substr","Backdrop","backdrop","ModalOverlay","console","log","modal","content","buttonText","portalElement","document","getElementById","Modal","ReactDOM","createPortal","onClose","defaultGenState","mainFormView","currentInputsData","lastCreatedLabel","formError","genReducer","state","action","error","TaskGenerator","useReducer","genState","dispatchGenAction","tasksCtx","useContext","onErroHandler","gen","task","inputsData","LabelForm","newLabel","updatedNewLabel","addLabel","CheckIcon","infoIcon","DeleteIcon","Task","showDescription","setShowDescription","data","active","completed","background","topContainer","date","deleteButton","buttonsContainer","InfoIcon","List","tasksList","Lists","isActiveExpanded","isCompletedExpanded","listViewState","setListViewState","activeTasks","filter","completedTasks","expandHandler","savedTasks","localStorage","getItem","savedLabels","defaultTasksState","JSON","parse","tasksReducer","updatedTasks","movedTaskId","movedTaskIdx","findIndex","movedTask","updatedTask","deletedTaskId","TasksProvider","tasksState","dispatchTasksAction","useEffect","setItem","stringify","tasksContext","Provider","App","saveToLocalStorage","window","addEventListener","removeEventListener","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.cc2446f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButton\":\"TaskGenerator_formButton__2rDnS\",\"gen\":\"TaskGenerator_gen__OH5Ca\",\"labelsList\":\"TaskGenerator_labelsList__1DknC\",\"option\":\"TaskGenerator_option__1FuX3\",\"labelButton\":\"TaskGenerator_labelButton__1_irb\",\"delButton\":\"TaskGenerator_delButton__HHdN5\",\"chosen\":\"TaskGenerator_chosen__3Wy_g\",\"icon\":\"TaskGenerator_icon__3nCQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1rJHX\",\"topContainer\":\"Task_topContainer__14lcd\",\"date\":\"Task_date__5DF-i\",\"title\":\"Task_title__1sxnH\",\"completed\":\"Task_completed__1KEmB\",\"label\":\"Task_label__D89nM\",\"buttonsContainer\":\"Task_buttonsContainer__2fy2f\",\"icon\":\"Task_icon__1PomF\",\"deleteButton\":\"Task_deleteButton__1xL8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1NlOb\",\"header\":\"Card_header__1EsBM\",\"icon\":\"Card_icon__2NNQZ\",\"mainContent\":\"Card_mainContent__3ZezA\",\"expanded\":\"Card_expanded__242JD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2B7vN\",\"modal\":\"Modal_modal__35tKt\",\"slide-down\":\"Modal_slide-down__2hmTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksList\":\"Lists_tasksList__1K9Aj\",\"expanded\":\"Lists_expanded__3SJx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YFrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eXYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PgvOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__IG9Qu\"};","const PencilIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-check2-square\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M3 14.5A1.5 1.5 0 0 1 1.5 13V3A1.5 1.5 0 0 1 3 1.5h8a.5.5 0 0 1 0 1H3a.5.5 0 0 0-.5.5v10a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V8a.5.5 0 0 1 1 0v5a1.5 1.5 0 0 1-1.5 1.5H3z\" />\r\n      <path d=\"m8.354 10.354 7-7a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PencilIcon;\r\n","import PencilIcon from './PencilSVG';\r\nimport classes from '../Layout/Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <h1>{props.title}</h1>\r\n        <PencilIcon width={20} height={20} />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from '../Layout/Footer.module.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className={classes.footer}>\r\n        <p> by Omer Zabtani</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classes from './Input.module.css';\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      defaultValue={props.defaultValue}\r\n      type=\"text\"\r\n      className={classes.input}\r\n      id={props.id}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n      onChange={props.onChange}\r\n      inputRef={ref}\r\n      multiline={props.multiline ? true : null}\r\n      rows={props.row ? props.row : null}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","const LabelDeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill={props.fillColor}\r\n      className={`bi bi-backspace-reverse-fill ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M0 3a2 2 0 0 1 2-2h7.08a2 2 0 0 1 1.519.698l4.843 5.651a1 1 0 0 1 0 1.302L10.6 14.3a2 2 0 0 1-1.52.7H2a2 2 0 0 1-2-2V3zm9.854 2.854a.5.5 0 0 0-.708-.708L7 7.293 4.854 5.146a.5.5 0 1 0-.708.708L6.293 8l-2.147 2.146a.5.5 0 0 0 .708.708L7 8.707l2.146 2.147a.5.5 0 0 0 .708-.708L7.707 8l2.147-2.146z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LabelDeleteIcon;\r\n","import classes from './TaskGenerator.module.css';\r\nimport LabelDeleteIcon from './LabelDeleteIcon';\r\nconst OptionButton = (props) => {\r\n  return (\r\n    <li className={`${classes.option} ${props.chosen && classes.chosen}`}>\r\n      {props.chosen && (\r\n        <button className={classes.delButton}>\r\n          <LabelDeleteIcon\r\n            className={classes.icon}\r\n            fillColor={props.color}\r\n            width={24}\r\n            height={24}\r\n          />\r\n        </button>\r\n      )}\r\n      <button\r\n        className={classes.labelButton}\r\n        type=\"button\"\r\n        style={{ backgroundColor: props.color }}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.title}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OptionButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst FormButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={props.color}\r\n      type={props.type}\r\n      className={classes.formButton}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import classes from './TaskGenerator.module.css';\r\nimport Input from '../UI/Input';\r\nimport { useRef, useState } from 'react';\r\nimport OptionButton from './OptionButton';\r\nimport FormButton from './FormButton';\r\n\r\nconst TaskForm = (props) => {\r\n  const [chosenLabel, setChosenLabel] = useState(props.chosenLabel);\r\n  const nameInput = useRef();\r\n  const descriptionInput = useRef();\r\n  const addNewTaskHandler = (event) => {\r\n    event.preventDefault();\r\n    const name = nameInput.current.value;\r\n    const description = descriptionInput.current.value;\r\n    if (name.trim('').length < 3) {\r\n      props.onError('note name is too short');\r\n      return;\r\n    }\r\n\r\n    props.onAddNewTask({\r\n      name: name,\r\n      description: description,\r\n      label: chosenLabel,\r\n    });\r\n    nameInput.current.value = '';\r\n    descriptionInput.current.value = '';\r\n  };\r\n  const chooseLabelHandler = (label) => {\r\n    setChosenLabel(label);\r\n  };\r\n  const toggleView = () => {\r\n    props.toggleView({\r\n      name: nameInput.current.value,\r\n      description: descriptionInput.current.value,\r\n    });\r\n  };\r\n  const labels = props.labels.map((label) => {\r\n    const isChosen = label.id === chosenLabel.id ? true : false;\r\n    return (\r\n      <OptionButton\r\n        chosen={isChosen}\r\n        key={label.id}\r\n        title={label.name}\r\n        color={label.color}\r\n        onClick={chooseLabelHandler.bind(null, label)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewTaskHandler}>\r\n        <Input\r\n          label=\"Note name\"\r\n          id=\"name\"\r\n          ref={nameInput}\r\n          defaultValue={props.lastInputsData.name}\r\n        />\r\n        <Input\r\n          defaultValue={props.lastInputsData.description}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          multiline={true}\r\n          row={4}\r\n          ref={descriptionInput}\r\n        />\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Note\" />\r\n        <FormButton type=\"button\" onClick={toggleView} text=\"Add new label\" />\r\n        <ul className={classes.labelsList}>{labels}</ul>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import Input from '../UI/Input';\r\nimport classes from './TaskGenerator.module.css';\r\nimport FormButton from './FormButton';\r\nimport { useRef, useState } from 'react';\r\nimport OptionButton from './OptionButton';\r\n\r\nconst TaskForm = (props) => {\r\n  const [chosenColor, setChosenColor] = useState(props.labelColors[0]);\r\n  const labelNameInput = useRef();\r\n  const addNewLabelHandler = (event) => {\r\n    event.preventDefault();\r\n    const labelName = labelNameInput.current.value;\r\n    if (labelName.length < 3) {\r\n      props.onError('label is too short!');\r\n      return;\r\n    }\r\n    props.onAddNewLabel({\r\n      name: labelName,\r\n      color: chosenColor,\r\n    });\r\n    props.toggleView();\r\n  };\r\n  const chooseColorHandler = (color) => {\r\n    setChosenColor(color);\r\n  };\r\n  const colorOptions = props.labelColors.map((color) => {\r\n    const isChosen = chosenColor === color.hex;\r\n    return (\r\n      <OptionButton\r\n        chosen={isChosen}\r\n        key={color.hex.replace('#', '')}\r\n        color={color.hex}\r\n        title={color.colorName}\r\n        type=\"button\"\r\n        value={color.hex}\r\n        label=\"Description\"\r\n        onClick={chooseColorHandler.bind(null, color.hex)}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" onSubmit={addNewLabelHandler}>\r\n        <p>Choose a name then a color for this new label!</p>\r\n        <Input label=\"Label name\" ref={labelNameInput} />\r\n        <ul className={classes.labelsList}>{colorOptions}</ul>\r\n        <FormButton color=\"primary\" type=\"submit\" text=\"Add Label\" />\r\n        <FormButton type=\"button\" text=\"Go back\" onClick={props.toggleView} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","const ExpandIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className={`bi bi-arrows-angle-expand ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport default ExpandIcon;\r\n","const MinimizeIcon = (props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      className={`bi bi-dash-lg ${props.className}`}\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M0 8a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H1a1 1 0 0 1-1-1z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default MinimizeIcon;\r\n","import classes from './Card.module.css';\r\nimport ExpandIcon from './ExpandIcon';\r\nimport MinimizeIcon from './MinimizeIcon';\r\nconst Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className={`${classes.card} ${props.className}`}>\r\n        <div className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n          {props.onExpand && (\r\n            <button type=\"button\" onClick={props.onExpand}>\r\n              {props.expanded ? (\r\n                <MinimizeIcon className={classes.icon} width=\"25\" height=\"25\" />\r\n              ) : (\r\n                <ExpandIcon className={classes.icon} width=\"25\" height=\"25\" />\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.mainContent}>{props.children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nexport const TasksContext = React.createContext({\r\n  tasks: [],\r\n  add: () => {},\r\n  move: (id) => {},\r\n  remove: () => {},\r\n});\r\n\r\nexport default TasksContext;\r\n","export const creationDate = () => {\r\n  const today = new Date();\r\n  let [dd, mm, hour, min] = [\r\n    today.getDate(),\r\n    today.getMonth() + 1,\r\n    today.getHours(),\r\n    today.getMinutes(),\r\n  ];\r\n  const [yyyy, day, weekDays] = [\r\n    today.getFullYear(),\r\n    today.getDay(),\r\n    ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  ];\r\n\r\n  if (dd < 10) dd = '0' + dd;\r\n  if (mm < 10) mm = '0' + mm;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n  const creationTime = ` ${weekDays[day]}, ${dd}/${mm}/${yyyy}, ${hour}:${min}`;\r\n  return creationTime;\r\n};\r\nexport const randId = () => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n","import classes from './Modal.module.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClick} />;\r\n};\r\nconst ModalOverlay = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className={classes.modal}>\r\n      <p className={classes.content}>{props.children}</p>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        onClick={props.onClick}\r\n      >\r\n        {props.buttonText}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst portalElement = document.getElementById('overlays');\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay buttonText={props.buttonText} onClick={props.onClose}>\r\n          {props.children}\r\n        </ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useContext, useReducer } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport LabelForm from './LabelForm';\r\nimport Card from '../UI/Card';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { randId } from '../../store/tasks-helper';\r\nimport classes from './TaskGenerator.module.css';\r\nimport Modal from '../UI/Modal';\r\n\r\nconst defaultGenState = {\r\n  mainFormView: true,\r\n  currentInputsData: { name: '', description: '' },\r\n  lastCreatedLabel: { id: 'def', name: 'General', color: '#0000003b' },\r\n  formError: false,\r\n};\r\nconst genReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SWITCH_TO_TASK_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: true,\r\n      };\r\n\r\n    case 'SWITCH_TO_LABEL_FORM':\r\n      return {\r\n        ...state,\r\n        mainFormView: false,\r\n        currentInputsData: action.value,\r\n      };\r\n\r\n    case 'FORM_ERROR':\r\n      const error = action.value;\r\n      return {\r\n        ...state,\r\n        formError: error,\r\n      };\r\n\r\n    default:\r\n      return defaultGenState;\r\n  }\r\n};\r\nconst TaskGenerator = (props) => {\r\n  const labelColors = [\r\n    { hex: '#0000003b', colorName: 'Grey' },\r\n    { hex: '#04f43f3b', colorName: 'Green' },\r\n    { hex: '#f4041e3b', colorName: 'Red' },\r\n    { hex: '#e804f43b', colorName: 'Pink' },\r\n    { hex: '#ffeb003b', colorName: 'Yellow' },\r\n    { hex: '#042df43b', colorName: 'Blue' },\r\n  ];\r\n  const [genState, dispatchGenAction] = useReducer(genReducer, defaultGenState);\r\n  const tasksCtx = useContext(TasksContext);\r\n  console.log(tasksCtx);\r\n  const onAddNewTaskHandler = (task) => {\r\n    tasksCtx.add({ ...task, id: randId() });\r\n  };\r\n  const onAddNewLabelHandler = (newLabel) => {\r\n    const updatedNewLabel = { ...newLabel, id: randId() };\r\n    tasksCtx.addLabel(updatedNewLabel);\r\n  };\r\n  const switchToTaskFormHandler = () => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_TASK_FORM' });\r\n  };\r\n  const switchToLabelFormHandler = (inputsData) => {\r\n    dispatchGenAction({ type: 'SWITCH_TO_LABEL_FORM', value: inputsData });\r\n  };\r\n  const onErroHandler = (error) => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: error });\r\n  };\r\n  const closeErrorModalHandler = () => {\r\n    dispatchGenAction({ type: 'FORM_ERROR', value: false });\r\n  };\r\n  return (\r\n    <Card className={classes.gen} title=\"New Note\">\r\n      {genState.formError && (\r\n        <Modal buttonText=\"Back To App\" onClose={closeErrorModalHandler}>\r\n          {genState.formError}\r\n        </Modal>\r\n      )}\r\n\r\n      {genState.mainFormView && (\r\n        <TaskForm\r\n          onError={onErroHandler}\r\n          lastInputsData={\r\n            genState.currentInputsData && genState.currentInputsData\r\n          }\r\n          chosenLabel={genState.lastCreatedLabel}\r\n          onAddNewTask={onAddNewTaskHandler}\r\n          toggleView={switchToLabelFormHandler}\r\n          labels={tasksCtx.labels}\r\n        />\r\n      )}\r\n      {!genState.mainFormView && (\r\n        <LabelForm\r\n          onError={onErroHandler}\r\n          labelColors={labelColors}\r\n          onAddNewLabel={onAddNewLabelHandler}\r\n          toggleView={switchToTaskFormHandler}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskGenerator;\r\n","const CheckIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-check-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CheckIcon;\r\n","const infoIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-info-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default infoIcon;\r\n","const DeleteIcon = (props) => {\r\n  return (\r\n    <svg\r\n      className={`bi bi-x-circle ${props.className}`}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={props.width}\r\n      height={props.height}\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n      <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteIcon;\r\n","import classes from './Task.module.css';\r\nimport CheckIcon from './CheckIcon';\r\nimport InfoIcon from './InfoIcon';\r\nimport DeleteIcon from './DeleteIcon';\r\nimport { useContext, useState } from 'react';\r\nimport TasksContext from '../../../store/tasks-context';\r\nconst Task = (props) => {\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const tasksCtx = useContext(TasksContext);\r\n  const toggleDescriptionHandler = () => {\r\n    setShowDescription(!showDescription);\r\n  };\r\n  const removeHandler = (id) => {\r\n    tasksCtx.remove(id);\r\n  };\r\n  const moveHandler = (id) => {\r\n    tasksCtx.move(id);\r\n  };\r\n  console.log(props);\r\n  return (\r\n    <div\r\n      className={\r\n        props.data.active\r\n          ? classes.task\r\n          : `${classes.task} ${classes.completed}`\r\n      }\r\n      style={{\r\n        background: `linear-gradient(${props.data.label.color},rgb(253, 253, 253)`,\r\n      }}\r\n    >\r\n      <div className={classes.topContainer}>\r\n        <div className={classes.date}>{props.data.date}</div>\r\n        <button type=\"button\" onClick={removeHandler.bind(null, props.data.id)}>\r\n          <DeleteIcon className={classes.deleteButton} width={19} height={19} />\r\n        </button>\r\n      </div>\r\n      <h2 className={classes.title}>{props.data.name}</h2>\r\n      {props.data.description && showDescription && (\r\n        <p>{props.data.description}</p>\r\n      )}\r\n      <div\r\n        className={classes.label}\r\n        style={{ backgroundColor: props.data.label.color }}\r\n      >\r\n        #{props.data.label.name}\r\n      </div>\r\n      <div className={classes.buttonsContainer}>\r\n        <button type=\"button\" onClick={moveHandler.bind(null, props.data.id)}>\r\n          {props.data.active ? 'Complete' : 'Activate'}\r\n          <div className={classes.icon}>\r\n            <CheckIcon width={25} height={25} />\r\n          </div>\r\n        </button>\r\n        {props.data.description && (\r\n          <button type=\"button\" onClick={toggleDescriptionHandler}>\r\n            {showDescription ? 'Hide paragraph' : 'Info'}\r\n            <div className={classes.icon}>\r\n              <InfoIcon width={25} height={25} />\r\n            </div>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import Card from '../UI/Card';\r\nimport Task from './Task/Task';\r\nimport classes from './Lists.module.css';\r\nconst List = (props) => {\r\n  const tasks = props.tasks.map((task) => <Task key={task.id} data={task} />);\r\n  return (\r\n    <Card\r\n      onExpand={props.onExpand}\r\n      className={props.expanded && classes.expanded}\r\n      expanded={props.expanded}\r\n      title={props.title}\r\n    >\r\n      <div className={classes.tasksList}>\r\n        {tasks.length > 0 ? tasks : 'List is empty.'}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import List from './List';\r\nimport TasksContext from '../../store/tasks-context';\r\nimport { useContext, useState } from 'react';\r\nconst Lists = () => {\r\n  const { tasks } = useContext(TasksContext);\r\n  const [listViewState, setListViewState] = useState({\r\n    isActiveExpanded: true,\r\n    isCompletedExpanded: false,\r\n  });\r\n  const activeTasks = tasks.filter((task) => task.active === true);\r\n  const completedTasks = tasks.filter((task) => task.active !== true);\r\n  const expandHandler = () => {\r\n    setListViewState((state) => {\r\n      return {\r\n        isActiveExpanded: !state.isActiveExpanded,\r\n        isCompletedExpanded: !state.isCompletedExpanded,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        onExpand={expandHandler}\r\n        expanded={listViewState.isActiveExpanded}\r\n        tasks={activeTasks}\r\n        title=\"Active\"\r\n      />\r\n      <List\r\n        onExpand={expandHandler}\r\n        expanded={listViewState.isCompletedExpanded}\r\n        tasks={completedTasks}\r\n        title=\"Completed\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport TasksContext from './tasks-context';\r\nimport { creationDate } from './tasks-helper';\r\nconst savedTasks = localStorage.getItem('tasks');\r\nconst savedLabels = localStorage.getItem('labels');\r\nconst defaultTasksState = {\r\n  tasks: savedTasks ? JSON.parse(savedTasks) : [],\r\n  labels: savedLabels\r\n    ? JSON.parse(savedLabels)\r\n    : [{ id: 'def', name: 'General', color: '#0000003b' }],\r\n};\r\nfunction tasksReducer(state, action) {\r\n  let updatedTasks = [...state.tasks];\r\n  switch (action.type) {\r\n    case 'ADDLABEL':\r\n      const label = action.value;\r\n      return {\r\n        ...state,\r\n        labels: [...state.labels, label],\r\n      };\r\n    case 'ADD':\r\n      const task = action.value;\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          ...updatedTasks,\r\n          { ...task, active: true, date: creationDate() },\r\n        ],\r\n      };\r\n    case 'MOVE':\r\n      const movedTaskId = action.value;\r\n      const movedTaskIdx = state.tasks.findIndex(\r\n        (task) => task.id === movedTaskId\r\n      );\r\n      const movedTask = updatedTasks[movedTaskIdx];\r\n      const updatedTask = { ...movedTask, active: !movedTask.active };\r\n      updatedTasks[movedTaskIdx] = updatedTask;\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n\r\n    case 'REMOVE':\r\n      const deletedTaskId = action.value;\r\n      updatedTasks = updatedTasks.filter((task) => task.id !== deletedTaskId);\r\n      return {\r\n        ...state,\r\n        tasks: [...updatedTasks],\r\n      };\r\n    default:\r\n      return defaultTasksState;\r\n  }\r\n}\r\nexport const TasksProvider = (props) => {\r\n  const [tasksState, dispatchTasksAction] = useReducer(\r\n    tasksReducer,\r\n    defaultTasksState\r\n  );\r\n  const { tasks } = tasksState;\r\n  const { labels } = tasksState;\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    localStorage.setItem('labels', JSON.stringify(labels));\r\n  }, [tasks, labels]);\r\n  const addLabelHandler = (label) => {\r\n    dispatchTasksAction({ type: 'ADDLABEL', value: label });\r\n  };\r\n  const addHandler = (task) => {\r\n    dispatchTasksAction({ type: 'ADD', value: task });\r\n  };\r\n  const moveHandler = (id) => {\r\n    dispatchTasksAction({ type: 'MOVE', value: id });\r\n  };\r\n  const removeHandler = (id) => {\r\n    dispatchTasksAction({ type: 'REMOVE', value: id });\r\n  };\r\n\r\n  const tasksContext = {\r\n    labels: labels,\r\n    tasks: tasks,\r\n    addLabel: addLabelHandler,\r\n    add: addHandler,\r\n    move: moveHandler,\r\n    remove: removeHandler,\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider value={tasksContext}>\r\n      {props.children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TasksProvider;\r\n","import { useEffect } from 'react';\nimport classes from './App.module.css';\nimport Header from './components/Layout/Header';\nimport Footer from './components/Layout/Footer';\nimport TaskGenerator from './components/TaskGenerator/TaskGenerator';\nimport Lists from './components/Lists/Lists';\nimport { TasksProvider } from './store/TasksProvider';\nconst App = () => {\n  useEffect(() => {\n    const saveToLocalStorage = () => {\n      localStorage.setItem('dodo', 'drerei');\n    };\n    window.addEventListener('beforeunload', saveToLocalStorage);\n    return () => {\n      window.removeEventListener('beforeunload', saveToLocalStorage);\n    };\n  }, []);\n\n  return (\n    <div className={classes.app}>\n      <Header title=\"Noter\" />\n      <TasksProvider>\n        <main>\n          <TaskGenerator />\n          <Lists />\n        </main>\n      </TasksProvider>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}